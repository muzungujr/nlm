// Copyright (C) 2003-2010 AvantLogic Corporation: http://www.mapsalive.com

function maGetQueryStringArg(arg) { 
	var pairs = document.location.search.substring(1).split("&");
	for (i = 0; i < pairs.length; i++)
	{
		var pair = pairs[i];
		var eq = pair.indexOf('=');
		if (pair.substring(0, eq).toLowerCase() == arg.toLowerCase())
			return pair.substring(eq + 1);
	}
	return "";
}






































































































if (typeof (console) === 'undefined') { console = function() {};console.log = function(s) {};} window.onerror = function(errorMessage, fileName, lineNumber) { if (maClient.preview) { alert("MapsAlive detected a JavaScript error:\n\n" + errorMessage + "\n\nVerify that your Custom HTML JavaScript is correct.\n\n" + fileName + " : Line " + lineNumber);return true;    }     else     { return false;    } };function maUaIs(ua)  { var answer = navigator.userAgent.toLowerCase().indexOf(ua);return answer != -1;} var mapsalive = new Object();var maClient = new Object();maClient.runtimeVersion = 111;maClient.popupLocationMarkerCenter = 1;maClient.popupLocationMarkerEdge = 2;maClient.popupLocationMouse = 3;maClient.popupLocationFixedPopup = 4;maClient.popupLocationFixedAlwaysVisible = 5;maClient.opera = navigator.userAgent.search(/Opera/) != -1;maClient.ie = navigator.appVersion.indexOf("MSIE") != -1 && !maClient.opera ? 1 : 0;maClient.ie6 = maClient.ie && (navigator.appVersion.indexOf("IE 6.") != -1);maClient.ie9 = maClient.ie && (navigator.appVersion.indexOf("IE 9.") != -1);maClient.ie10 = maClient.ie && (navigator.appVersion.indexOf("IE 10.") != -1);maClient.macintosh = maUaIs("macintosh");maClient.firefox = maUaIs("firefox");maClient.android = maUaIs("android");maClient.chrome = maUaIs("chrome");maClient.mobile = maUaIs("mobile") || maClient.android;maClient.macFirefox = maClient.macintosh && maClient.firefox;maClient.safariLt3 = false;maClient.iOS = maUaIs("ipad") || maUaIs("iphone") || maUaIs("ipod");maClient.viewId = 0;maClient.tid = 1;maClient.path = "";maClient.preview = false;maClient.page = false;maClient.unbranded = false;maClient.pinNextPopup = false;maClient.dirPreviewSlide = null;maClient.liveDataErrorSettings = null;maClient.map = null;maClient.mapLoaded = false;maClient.ready = false;maClient.waitForClientReadyCount = 0;maClient.restoredViewId = 0;maClient.mouseX = -1;maClient.mouseY = -1;maClient.mouseIsOverPopup = false;maClient.mouseDragStarted = false;maClient.enableRefresh = false;maClient.clickedCloseX = false;maClient.slideShowIsRunning = false;maClient.soundManagerReady = false;maClient.hotspotOnQueryString = false;maClient.mapIsHtml5 = false;maClient.mapIsFlash = false;maClient.mapIsEditor = false;mapsalive.Api = "";mapsalive.ApiError = function(msg) { if (maClient.preview) { alert("MapsAlive API Error\n\n" + mapsalive.Api + "\n\n" + msg);} };mapsalive.ApiMissingArg = function(arg, name) { if (typeof arg == "undefined") { mapsalive.ApiError("A required parameter is missing: " + name);return true;} return false;};mapsalive.ApiSoundManagerMissing = function() { if (typeof soundManager == "undefined") { mapsalive.ApiError("SoundManager has not been included with this tour.\nFor help, see the MapsAlive User Guide for the JavaScript API.");return true;} else if (!maClient.soundManagerReady) { return true;} return false;};mapsalive.ApiMapNotLoaded = function() { if (!maClient.mapLoaded) { mapsalive.ApiError("An API call to the map was made before the map finished loading. To avoid this error, don't call map functions before maOnMapLoaded has been called.");return true;} return false;};mapsalive.map = function() { return maClient.map;};mapsalive.mapIsHtml5 = function() { return maClient.mapIsHtml5;};mapsalive.mapIsTouchDevice = function() { return maClient.isTouchDevice;};mapsalive.getQueryStringArg = function(arg) { return maGetQueryStringArg(arg);};mapsalive.changeMarkerNormalShapeAppearance = function(slideList, lineColor, lineAlpha, fillColor, fillAlpha, effects) { var viewIdList = maClient.createViewListFromSlideList(slideList);effects = maClient.convertEffects(effects);maClient.map.changeMarkerShapeAppearance(viewIdList, false, lineColor, lineAlpha, fillColor, fillAlpha, effects);};mapsalive.changeMarkerSelectedShapeAppearance = function(slideList, lineColor, lineAlpha, fillColor, fillAlpha, effects) { var viewIdList = maClient.createViewListFromSlideList(slideList);effects = maClient.convertEffects(effects);maClient.map.changeMarkerShapeAppearance(viewIdList, true, lineColor, lineAlpha, fillColor, fillAlpha, effects);};mapsalive.closePopup = function() { maClosePopup();};mapsalive.drawRoute = function(hotspotId, route, lineWidth, lineColor, lineAlpha, effects) { mapsalive.Api = "drawRoute";if (mapsalive.ApiMapNotLoaded()) return;if (mapsalive.ApiMissingArg(hotspotId, "hotspotId")) return;if (mapsalive.ApiMissingArg(route, "route")) return;var hotspot = maClient.getSlideBySlideId(hotspotId);if (!hotspot) { mapsalive.ApiError(hotspotId + " is not a hotspot on this map.");return;} var routeIsList = route.indexOf(',') >= 0;if (typeof lineWidth == "undefined") lineWidth = 3;if (typeof lineColor == "undefined") lineColor = 0xcc0000;if (typeof lineAlpha == "undefined") lineAlpha = 80;if (typeof effects == "undefined") effects = "shadow";effects = maClient.convertEffects(effects);var viewIdList;if (routeIsList) { viewIdList = maClient.createViewListFromRouteSlideList(route);} else { if (typeof routesTable == "undefined") { mapsalive.ApiError("This map does not have routes.");return;} var routeRecord = routesTable[route];if (!routeRecord) { mapsalive.ApiError("This map does not have route '" + route + "'.");return;} viewIdList = routeRecord.route;} var ok = maClient.map.drawRouteThroughMarkers(hotspot.viewId, lineWidth, lineColor, lineAlpha, viewIdList, effects);if (!ok) mapsalive.ApiError("Hotspot " + hotspotId + " is not a route.");};mapsalive.drawTestRoute = function(hotspotId, routeId) { mapsalive.drawRoute(hotspotId, routeId, 1, 0x0000ff, 100, "glow,0xffffff,100,5,5");};mapsalive.flushLiveDataCache = function() { for (var viewId in maClient.slides) { var slide = maClient.getSlide(viewId);slide.liveDataUpdateTime = 0;} };mapsalive.getCurrentHotspot = function() { var hotspot = maClient.getSlide(maTour.marker.viewId);if (!hotspot) return null;var o = new Object();o.id = hotspot.slideId;o.title = hotspot.title;o.htmlText = hotspot.htmlText;o.plainText = hotspot.plainText;o.embedText = hotspot.embedText ? hotspot.embedText : "";o.imageSrc = hotspot.imageSrc ? hotspot.imageSrc : "";return o;};mapsalive.getCurrentPage = function() { var o = new Object();o.id = maTour.mapId;return o;};mapsalive.getHotspotIdsForCategory = function(codes, and) { var codeList = codes.split(",");var getAll = and && maTrim(codes).length === 0;var result = new Array();for (var codeListIndex = 0; codeListIndex < codeList.length; codeListIndex++) { var listCode = maTrim(codeList[codeListIndex]);for (var categoryTableIndex = 0; categoryTableIndex < maTour.categoryTable.length; categoryTableIndex++) { var row = maTour.categoryTable[categoryTableIndex];var tableRowCode = row[0];if (!getAll && tableRowCode != listCode.toLowerCase()) { continue;} if (and && !getAll) { var rowHotspotIds = row.slice(1);if (codeListIndex === 0) { result = rowHotspotIds;} else { result = maClient.andArray(result, rowHotspotIds);} continue;} else { var hotspotId;for (var rowIndex = 1; rowIndex < row.length; rowIndex++) { hotspotId = row[rowIndex];if (!maClient.arrayContains(result, hotspotId)) { result.push(hotspotId);} } } } }  if (result.length === 0) return "";else if (result.length == 1) return result[0];else return result.join();};maClient.andArray = function(array1, array2) { var result = new Array();for (var i in array1) { var item1 = array1[i];for (var j in array2) { var item2 = array2[j];if (item1.toLowerCase() == item2.toLowerCase()) result.push(item1);} } return result;};maClient.arrayContains = function(array, item) { for (var i in array) { if (array[i] == item) return true;} return false;};mapsalive.hideDirectory = function() { if (maTour.hasDirectory) maClient.dirShow(false);};mapsalive.playSound = function(name, url) { mapsalive.Api = "playSound";if (mapsalive.ApiSoundManagerMissing()) return;if (mapsalive.ApiMissingArg(name, "name")) return;if (mapsalive.ApiMissingArg(url, "url")) return;var sound = soundManager.getSoundById(name);var toggle = sound && sound.playState == 1;if (toggle) { soundManager.togglePause(name);return;} soundManager.stopAll();if (!sound) { if (url.length === 0) return;sound = soundManager.createSound(name, url);} if (sound) { sound.play();} else if (maClient.preview) { var error = "MapsAlive could not play sound '" + name + "'.";if (url) error += "\n\n" + url;alert(error);} };mapsalive.positionMapToShowMarker = function(hotspotId) { mapsalive.Api = "positionMapToShowMarker";if (mapsalive.ApiMapNotLoaded()) return;if (mapsalive.ApiMissingArg(hotspotId, "hotspotId")) return;var viewId = maClient.getViewIdBySlideId(hotspotId);if (!viewId) { mapsalive.ApiError(hotspotId + " is not a hotspot on this map.");return;} if (maClient.map.positionMapToShowMarker(viewId)) maClosePopup();	 };mapsalive.restoreMarkerNormalShapeAppearance = function(slideList) { var viewIdList = maClient.createViewListFromSlideList(slideList);maClient.map.restoreMarkerShapeAppearance(viewIdList, false);};mapsalive.restoreMarkerSelectedShapeAppearance = function(slideList) { var viewIdList = maClient.createViewListFromSlideList(slideList);maClient.map.restoreMarkerShapeAppearance(viewIdList, true);};mapsalive.setMapZoomInOut = function(delta) { mapsalive.Api = "setMapZoomInOut";if (mapsalive.ApiMissingArg(delta, "delta")) return;if (maClient.map.setMapZoomInOut(delta)) maClosePopup();};mapsalive.setMapZoomLevel = function(level) { mapsalive.Api = "setMapZoomLevel";if (mapsalive.ApiMissingArg(level, "level")) return;if (maClient.map.setMapZoomLevel(level)) maClosePopup();};mapsalive.setMapPan = function(deltaX, deltaY) { mapsalive.Api = "setMapPan";if (mapsalive.ApiMissingArg(deltaX, "deltaX")) return;if (mapsalive.ApiMissingArg(deltaY, "deltaY")) return;if (maClient.mapIsFlash) alert("The setMapPan API is only supported for HTML5.\n\nThis map is rendered with Flash.");else maClient.map.setMapPan(deltaX, deltaY);};mapsalive.setMarkerAppearanceNormal = function(slideList) { var viewIdList = maClient.createViewListFromSlideList(slideList);maClient.map.setMarkerAppearanceNormal(viewIdList);};mapsalive.setMarkerAppearanceSelected = function(slideList) { var viewIdList = maClient.createViewListFromSlideList(slideList);maClient.map.setMarkerAppearanceSelected(viewIdList);};mapsalive.setMarkerBlink = function(slideList, blinkCount) { var viewIdList = maClient.createViewListFromSlideList(slideList);maClient.map.setMarkerListBlink(viewIdList, blinkCount);};mapsalive.setMarkerDisabled = function(slideList, isDisabled) { var viewIdList = maClient.createViewListFromSlideList(slideList);maClient.map.setMarkerListDisabled(viewIdList, isDisabled);};mapsalive.setMarkerHidden = function(slideList, isHidden) { var viewIdList = maClient.createViewListFromSlideList(slideList);maClient.map.setMarkerListHidden(viewIdList, isHidden);};mapsalive.setMarkerOnTop = function(slideId) { var slide = maClient.getSlideBySlideId(slideId);if (slide) { maClient.map.setMarkerOnTop(slide.viewId);} };mapsalive.setMarkerSelected = function(hotspotId) { mapsalive.Api = "setMarkerSelected";if (mapsalive.ApiMapNotLoaded()) return;if (mapsalive.ApiMissingArg(hotspotId, "hotspotId")) return;var viewId = maClient.getViewIdBySlideId(hotspotId);if (!viewId) { mapsalive.ApiError(hotspotId + " is not a hotspot on this map.");return;} maClient.showSlide(viewId, true);};mapsalive.setMarkerStatic = function(slideList, isStatic) { var viewIdList = maClient.createViewListFromSlideList(slideList);maClient.map.setMarkerListStatic(viewIdList, isStatic);};mapsalive.setTourTitle = function(text) { var e = document.getElementById("maPageTitleText");if (e) e.innerHTML = text;};mapsalive.stopSound = function() { mapsalive.Api = "stopSound";if (mapsalive.ApiSoundManagerMissing()) return;soundManager.stopAll();};maClient.flashConsoleLog = function(message) { };maClient.flashEditHotspotContent = function(viewId) { maEditSlide(viewId);};maClient.flashExecuteJavaScript = function(script) { try { maClient.hideTooltip();eval(script);} catch (error) { if (maClient.preview) { alert('MapsAlive detected an error in the following\n' + 'JavaScript that was provided for this hotspot:\n\n' + script + '\n\n' + error.message);} } };maClient.flashGalleryMarkerSelected = function(viewId) { maGalleryMarkerSelected(viewId);};maClient.flashGoToPage = function(url) { if (url === null) return;url = url.toLowerCase();maClient.goToPage(url, null, null);};maClient.flashHideMarkers = function(idList) { var viewId = idList.split(",");for (var i = 0; i < viewId.length; i++) maShowMarkerThumbAsHidden(viewId[i]);};maClient.flashHidePopup = function() { if (!maClient.ready) return;maClient.hidePopup(0);};maClient.flashLinkToUrl = function(url) { if (!maClient.ready) return;if (typeof url == "undefined" || url === null) { return;} try { var openInNewWindow = url.substring(0, 1) == "1";url = url.substring(1);if (openInNewWindow) { var wnd = window.open(url, "_blank");if (wnd === null || typeof wnd == "undefined") { if (confirm("A popup blocker prevented the following page from being opened in a new window:\n\n" + url + "\n\nPress OK to open the page in the current window.")) window.location = url;} } else window.location = url;} catch (error) { alert('MapsAlive detected an error while trying to link to this URL:\n\n' + url + '\n\n' + error.message + '\n\nPlease report this problem to the author\n' + 'of this tour so that they can correct it.');} };maClient.flashMapLoaded = function(mapViewerVersion, restoredViewId) { maClient.runtimeVersion = "v" + maClient.runtimeVersion + ":" + mapViewerVersion;maClient.restoredViewId = restoredViewId;maClient.waitForClientReady();};maClient.flashMarkerCoordsChanged = function(coords) { var markerCoords = maGetElementByPageId("MarkerCoords");if (markerCoords) { markerCoords.value = coords;maChangeDetected();} };maClient.flashMarkerDeselected = function() { maDeselectSelectedMarkerThumb();};maClient.flashMarkerMouseOver = function(tooltip, x, y) { if (!maClient.ready) return;if (maTrim(tooltip).length === 0) return;maClient.showTooltip(parseInt(x,10), parseInt(y,10), tooltip);};maClient.flashMarkerMouseOut = function() { if (!maClient.ready) { return;} maClient.clearBeforeDelay();maClient.hideTooltip();if (!maClient.usesHidablePopup) { return;} if (maClient.popupIsPinned) { return;} if (maClient.showingPopup) { maClient.hidePopup(maClient.popupAfterDelay());} if (typeof maOnHotspotChanged != "undefined") maOnHotspotChanged(0);};maClient.flashMarkerSelected = function(viewId) { if (!maClient.ready) return;maShowSelectedMarkerThumb(viewId);maShowMarkerInSlideList(viewId);};maClient.flashMouseDragStarted = function() { if (maClient.showingPopup && maTour.usesDynamicPopup) { maClient.mouseDragStarted = true;maClient.hidePopup(0);maClient.mouseDragStarted = false;} maClient.hideTooltip();};maClient.flashMouseMoved = function(x, y) { };maClient.flashPinnableMarkerClicked = function() { if (!maClient.ready) return;if (maClient.showingPopup) { maClient.pinPopup();} };maClient.flashSlideShowIsRunning = function(running) { maClient.slideShowIsRunning = running;};maClient.flashStageSizeWarning = function(scale) { if (maClient.stageSizeWarning) { if (scale == 100) { maClient.stageSizeWarning.style.visibility='hidden';return;} } else { if (scale == 100) return;maClient.stageSizeWarning = document.createElement("div");maClient.stageSizeWarning.setAttribute("id", "maBrowserZoomWarning");var map = document.getElementById('maMap');if (!map) return;map.appendChild(maClient.stageSizeWarning);var s = maClient.stageSizeWarning.style;s.left = '30px';s.top = '30px';s.zIndex = '5000';s.visibility = 'hidden';s.position = 'absolute';s.border = 'solid 2px #000000';s.color = '#000000';s.backgroundColor = '#fafac6';s.fontSize = '16px';s.fontFamily = "Verdana, Arial, Helvetica, Sans-Serif";s.padding = '6px';s.textAlign = 'center';} maClient.showStageSizeWarning(scale);};maClient.showStageSizeWarning = function(scale) { var msg = "<b>Warning</b><br/><br/>Your browser is zoomed to " + scale + "%.<br/><br/>This map works best at 100% and might<br/>not behave correctly at other zoom levels.";msg += "<br/><br/><span style='cursor:pointer;' onclick='maClient.stageSizeWarning.style.visibility=\"hidden\";'>[Close]</span>";maClient.stageSizeWarning.innerHTML = msg;maClient.stageSizeWarning.style.visibility = "visible";};maClient.flashViewChanged = function(viewId, x, y, w, h, mouseX, mouseY, isDirEntry) { if (!maClient.ready) return;if (maClient.isTouchDevice) { maClient.mouseX = mouseX;maClient.mouseY = mouseY;} maClient.hideTooltip();if (maClient.popupIsPinned && (maTour.marker.viewId == viewId || viewId == "0")) { if (viewId == "0") { maClosePopup();} else { maClient.popupIsPinned = false;maClient.popupSetControlPanelState(true, false);} return;} maClient.dirEntryClicked = isDirEntry;if (maTour.hasDirectory && maClient.dirShowing && !maTour.dir.staysOpen) { if (maClient.dirMouseIsOver && !maClient.dirEntryClicked && !maClient.isTouchDevice) { return;} else { maClient.dirShow(false);} } if (maTour.usesPopup) { maClient.clearAfterDelay();if (maClient.showingPopup && viewId == maTour.marker.viewId) { return;} } maTour.marker.viewId = parseInt(viewId, 10);maTour.marker.x = x;maTour.marker.y = y;maTour.marker.w = w;maTour.marker.h = h;if (!maClient.dirEntryClicked && !maClient.showingPopup && (maTour.usesPopup && maTour.popup.delayType == 1 && maTour.popup.delay !== 0)) { maClient.clearBeforeDelay();maClient.popupDelayBeforeIntervalId = setTimeout("maClient.slideChanged(true);", maTour.popup.delay);} else { if (maClient.dirEntryClicked || maClient.isTouchDevice) { maClient.pinNextPopup = true;} else { if (maClient.popupIsPinned) { maClient.popupSetControlPanelState(false, false);} } var mouseIsOverMarker = !maClient.dirEntryClicked && mouseX > 0 & mouseY > 0;maClient.slideChanged(mouseIsOverMarker);} if (typeof maOnHotspotChanged != "undefined") maOnHotspotChanged(maClient.slide.slideId);};maClient.flashZoomStateChanged = function(percent, x, y) { maGetElementByPageId("ZoomState").value = percent + "," + x + "," + y;maChangeDetected();};maClient.convertEffects = function(effects) { var s = effects.toLowerCase();s = s.replace(/blend/g, "-1,1");s = s.replace(/innerglow/g, "-1,2");s = s.replace(/glow/g, "-1,3");s = s.replace(/shadow/g, "-1,4");s = s.replace(/;/g, ",");return s;};maClient.swfPath = function() { return maTour.editMode ? maTour.appRuntimeUrl : maClient.path;};function maAttachEventListener(target, eventType, functionRef) { if (typeof target.addEventListener != "undefined") target.addEventListener(eventType, functionRef, false);else target.attachEvent("on" + eventType, functionRef);return true;  } maClient.elementHasNoId = function(e) { return e && (typeof e.id == 'undefined' || e.id.length === 0);};maClient.Flash = function() { };maClient.Flash.prototype.addParam = function(name, value) { this.params[name] = value;};maClient.Flash.prototype.addFlashVar = function(name, value) { this.flashVars[name] = value;};maClient.flashPresent = function() { return maClient.getPlayerVersion().major >= 8;};maClient.showRenderErrorMessage = function() { var msg1 = maTour.mobileDeviceFeaturesEnabled ? "<b>This map needs Flash or HTML5</b><hr/>Your browser does not support HTML5.<br/><br/>" : "<b>This map needs Flash 8 or higher</b><hr/>";var msg2 = "If your browser supports Flash, you can<br/>install it by clicking the button below.<br/>After installation, close the Adobe<br/>window and refresh this page.";var e = document.createElement("div");e.innerHTML = msg1 + msg2;var s = e.style;s.position = "absolute";s.zIndex = 1000;s.left = "30px";s.top = "30px";s.backgroundColor = "#f3f3f3";s.border = "1px solid #777777";s.color = "#000055";s.fontSize = "11px";s.fontFamily = "arial,helvetica,sans-serif";s.padding = "8px";s.textAlign = "center";s.width = "230px";var map = document.getElementById('maMap');if (!map) return;map.appendChild(e);var d = document.createElement("div");d.style.padding = "12px 0px 4px 0px";d.style.textAlign = "center";e.appendChild(d);var a = document.createElement("a");a.href = "http://macromedia.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash";a.target = "_blank";d.appendChild(a);var i = document.createElement("img");i.src = maTour.editMode ? "../Runtime/get_flash_player.gif" : maClient.path + "0020_" + maTour.version + ".gif";i.style.border = 0;a.appendChild(i);};maClient.Flash.prototype.getParamTags = function() { var paramTags = "";for (var key in this.params) paramTags += '<param name="' + key + '" value="' + this.params[key] + '" />';return paramTags;};maClient.Flash.prototype.getFlashVars = function() { var pair = new Array();for (var key in this.flashVars) pair.push(key + "=" + this.flashVars[key]);return pair.join("&");};maClient.Flash.prototype.emitMapHtml = function(editorUsage) { var id = maClient.mapIsEditor ? "mapEditor" : "mapViewer";var fsid = 'fs' + id;var movidId = maClient.mapIsEditor ? "0000_" : "0001_";var movie = maClient.swfPath() + movidId + maTour.version + ".swf";var forceHtml5 = maGetQueryStringArg("html5") == "1";var forceFlash = maGetQueryStringArg("html5") == "0";var browserSupportsHtml5 = !!document.createElement('canvas').getContext;var browserSupportsFlash = maClient.flashPresent();var defaultIsHtml5 = (maClient.mobile && !maTour.mobileDefaultIsFlash) || (!maClient.mobile && maTour.desktopDefaultIsHtml5);var html = "";if (!defaultIsHtml5 && maClient.chrome) { defaultIsHtml5 = true;} if (((browserSupportsHtml5 && maTour.mobileDeviceFeaturesEnabled) && ((defaultIsHtml5 && !maClient.mapIsEditor) || !browserSupportsFlash) && !forceFlash) || forceHtml5) { maClient.mapIsHtml5 = true;html += '<canvas id="maStatusLayer" style="position:absolute;z-index:0;-webkit-user-select:none;" width="' + maTour.stageW + '" height="' + maTour.stageH + '"></canvas>';html += '<canvas id="maMapLayer" style="position:absolute;z-index:1;-webkit-user-select:none;" width="' + maTour.stageW + '" height="' + maTour.stageH + '"></canvas>';html += '<canvas id="maMarkerLayer" style="position:absolute;z-index:2;-webkit-user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0);" width="' + maTour.stageW + '" height="' + maTour.stageH + '"><div style="font-family:sans-serif;width:200px;padding:12px;color:#333;">This interactive map requires HTML5.You can view it with these browsers: Safari, Firefox, IE9, Chrome, or Opera.</div></canvas>';} else if (browserSupportsFlash) { maClient.mapIsFlash = true;this.params = new Object();this.addParam('mapFileName', maClient.mapIsEditor ? "" : maTour.mapFileName);this.addParam('bgcolor', '');this.addParam('quality', 'high');this.addParam("swliveconnect", "true");this.addParam("wmode", "transparent");this.addParam('AllowScriptAccess', 'always');this.flashVars = new Object();this.addFlashVar("fv_clipId", id);this.addFlashVar("fv_ie", maClient.ie);this.addFlashVar("fv_pageId", maClient.mapIsEditor ? 0 : maTour.pageId);this.addFlashVar("fv_swf", maClient.path + maTour.mapSwfName);this.addFlashVar("fv_themeId", maClient.tid);this.addFlashVar("fv_stageW", maTour.stageW);this.addFlashVar("fv_stageH", maTour.stageH);var traceFlash = false;this.addFlashVar("fv_trace", traceFlash || maGetQueryStringArg("fv_trace") == "1" ? 1 : 0);if (maTour.usesPopup) { this.addFlashVar("fv_pinnable", maTour.popup.pinOnClick ? 1 : 0);} this.addFlashVar("fv_popup", maClient.usesHidablePopup ? 1 : 0);if (maClient.mapIsEditor) { this.addFlashVar("fv_mapPath", maTour.tourFolderUrl + maTour.tourId + "_/");this.addFlashVar("fv_editorUsage", editorUsage);} else { this.addFlashVar("fv_mapPath", maClient.path);} if (navigator.plugins && navigator.mimeTypes && navigator.mimeTypes.length)  { html += '<embed type="application/x-shockwave-flash" src="' + movie + '"';html += ' width="' + maTour.stageW + '" height="' + maTour.stageH + '"';html += ' id="' + fsid + '" name="' + fsid + '"';for (var key in this.params) html += ' ' + key + '="' + this.params[key] + '"';html += ' flashvars="' + this.getFlashVars() + '"';html += '></embed>';} else  { html += '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"';html += ' width="' + maTour.stageW + '" height="' + maTour.stageH + '"';html += ' id="' + fsid + '">';html += '<param name="movie" value="' + movie + '" />';html += this.getParamTags();html += '<param name="flashvars" value="' + this.getFlashVars() + '" />';html += '</object>';} } else { var url = maTour.editMode ? "ImageRenderer.ashx?type=map" : this.params["mapFileName"];var s = document.getElementById('maMap').style;s.backgroundImage = "url(" + maClient.path + url + ")";s.backgroundRepeat = "no-repeat";s.width = maTour.stageW + "px";s.height = maTour.stageH + "px";} document.write(html);};function maCaptureMousePosition(event) { maClient.captureMousePosition(event);} maClient.captureMousePosition = function(event) { if (!maClient.ready || !maClient.mapLoaded) return;if (maClient.isTouchDevice) return;if (typeof event == "undefined") event = window.event;var scrollingPosition = maClient.getScrollingPosition();if (typeof event.pageX != "undefined" && typeof event.x != "undefined") { maClient.mouseX = event.pageX;maClient.mouseY = event.pageY;} else { maClient.mouseX = event.clientX + scrollingPosition[0];maClient.mouseY = event.clientY + scrollingPosition[1];} if (maClient.showingPreview) maClient.dirMovePreviewPanel();if (maClient.mapIsHtml5 && !maClient.mobile) { if (!maClient.map.getMouseLocation() || maClient.map.getMarkerUnderMouse() === 0) { if (!maClient.mouseIsOverPopup) { maClient.flashMarkerMouseOut();} return;} } if (maClient.showingTooltip) maClient.moveTooltip();var movePopupWithMouse = maClient.showingPopup && maTour.usesDynamicPopup && maTour.popup.location == maClient.popupLocationMouse && !maTour.popup.allowMouseover && !maClient.popupIsPinned;if (movePopupWithMouse) { maClient.setPopupLocation(true);} };maClient.showPage = function(pageId, slideId) { var page = maClient.getPageByPageId(pageId);if (page) { var url = "page" + page.pageNumber + ".htm";var slide = maClient.getSlideBySlideId(slideId);var viewId = slide ? slide.viewId : null;if (page.pageNumber != maTour.pageNumber) maClient.updateLevelState();maClient.goToPage(url, viewId, maClient.levelState);return true;} else { return false;} };maClient.goToPage = function(url, viewId, dirCollapseState) { var pn = url.substr(4, url.indexOf('.') - 4);if (maClient.preview) { var aid = maGetQueryStringArg("aid");var e = document.getElementById('TasksPanel');var sa = e && e.style.display == 'block';e = document.getElementById('SnippetsPanel');var ss = e && e.style.display == 'block';var tourId = maGetQueryStringArg("tourId");var accountId = maGetQueryStringArg("accountId");var tid = tourId.length > 0 ? "&tourId=" + tourId + "&accountId=" + accountId : "";var mid = viewId === null ? "" : "&hotspot=" + maClient.getSlide(viewId).slideId;var find = "";var cs = "";if (maTour.hasDirectory) { if (dirCollapseState === null) { maClient.updateLevelState();dirCollapseState = maClient.levelState;} cs = "&cs=" + dirCollapseState;find = maClient.dirSearchText();if (find.length > 0) find = "&find=" + find;} window.location = 'TourPreview.aspx?aid=' + aid + '&pn=' + pn + '&sa=' + (sa ? '1' : '0') + '&ss=' + (ss ? '1' : '0') + tid + mid + cs + find;} else { if (maClient.page) { if (maClient.unbranded) url = url.substring(0, url.length - 4) + '_.htm';window.location = maClient.constructGoToPageUrl(url, viewId, dirCollapseState);} else { if (typeof maClient.hostPageUrl == 'undefined' || maClient.hostPageUrl.indexOf("#") == -1) { alert("This web page has not yet been configured to allow this interactive map to display another page. To learn about embedding a multi-page tour, see the MapsAlive User Guide for Integrating Interactive Maps with Web Pages.");} else { url = maClient.hostPageUrl.replace(/#/, pn);window.location = maClient.constructGoToPageUrl(url, viewId, dirCollapseState);} } } };maClient.constructGoToPageUrl = function(url, viewId, dirCollapseState) { var mid = "";var cs = "";var find = "";var prefix = "";if (viewId) { prefix = url.indexOf("?") == -1 ? "?" : "&";mid = prefix + "hotspot=" + maClient.getSlide(viewId).slideId;} if (maTour.hasDirectory) { if (dirCollapseState === null || typeof dirCollapseState == "undefined") { maClient.updateLevelState();dirCollapseState = maClient.levelState;} if (dirCollapseState.length > 0) { prefix = prefix.length === 0 && url.indexOf("?") == -1 ? "?" : "&";cs = prefix + "cs=" + dirCollapseState;} find = maClient.dirSearchText();if (find.length > 0) { prefix = prefix.length === 0 && url.indexOf("?") == -1 ? "?" : "&";find = prefix + "find=" + find;} } return url + mid + cs + find;};maClient.getSlideBySlideId = function(slideId) { slideId = unescape(slideId);for (var viewId in maClient.slides) { var slide = maClient.getSlide(viewId);if (slide.slideId.toLowerCase() == slideId.toLowerCase()) { if (slide.pageNumber != maTour.pageNumber) continue;return slide;} } return null;};maClient.getViewIdBySlideId = function(slideId) { slideId = unescape(slideId);for (var viewId in maClient.slides) { var slide = maClient.getSlide(viewId);if (slide.slideId.toLowerCase() == slideId.toLowerCase()) { if (slide.pageNumber != maTour.pageNumber) continue;return viewId;}	 } return null;};maClient.slideChanged = function(mouseIsOverMarker) { maClient.changeSlide(mouseIsOverMarker && (!maClient.pinNextPopup || maClient.isTouchDevice));if (maTour.usesPopup) { maClient.showPopup(true);if (maClient.pinNextPopup) { maClient.pinPopup();} } };maClient.getPlayerVersion = function() { var playerVersion = new maClient.PlayerVersion([0,0,0]);if (navigator.plugins && navigator.mimeTypes.length) { var plugin = navigator.plugins["Shockwave Flash"];if (plugin && plugin.description) { playerVersion = new maClient.PlayerVersion(plugin.description.replace(/([a-zA-Z]|\s)+/, "").replace(/(\s+r|\s+b[0-9]+)/, ".").split("."));} } else { var axo = null;try { axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");} catch(e) { try { axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");playerVersion = new maClient.PlayerVersion([6,0,21]);axo.AllowScriptAccess = "always";  } catch(e) { if (playerVersion.major == 6) { return playerVersion;} } try { axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");} catch(e) {} } if (axo !== null) { playerVersion = new maClient.PlayerVersion(axo.GetVariable("$version").split(" ")[1].split(","));} } return playerVersion;};maClient.PlayerVersion = function(arrVersion) { this.major = arrVersion[0] !== null ? parseInt(arrVersion[0],10) : 0;this.minor = arrVersion[1] !== null ? parseInt(arrVersion[1],10) : 0;this.rev = arrVersion[2] !== null ? parseInt(arrVersion[2],10) : 0;};function maTrim(string) { if (string.length === 0) return string;while (string.substr(0, 1) == " ") string = string.substring(1, string.length);while (string.substr(string.length - 1, 1) == " ") string = string.substring(0, string.length - 1);return string;} maClient.createViewListFromRouteSlideList = function(slideList) { slideList += "";var viewIdList = "";if (slideList.length > 0) { var sections = slideList.split(";");for (var i in sections) { if (viewIdList.length > 0) viewIdList += ";";var section = maTrim(sections[i]);viewIdList += maClient.createViewListFromSlideList(section);} } return viewIdList;};maClient.createViewListFromSlideList = function(slideList) { slideList += "";if (slideList == "*") return slideList;var viewIdList = "";if (slideList.length > 0) { var slideIds = slideList.split(",");for (var i in slideIds) { if (viewIdList.length > 0) viewIdList += ",";var slideId = maTrim(slideIds[i]);var slide = maClient.getSlideBySlideId(slideId);if (slide) viewIdList += slide.viewId;} } return viewIdList;};maClient.getPageByPageNumber = function(pageNumber) { return maClient.pages[pageNumber];};maClient.getPageByPageId = function(pageId) { for (var pageNumber in maClient.pages) { var page = maClient.getPageByPageNumber(pageNumber);if (page.pageId.toLowerCase() == pageId.toLowerCase()) return page;} return null;	 };maClient.getSlide = function(viewId) { var slide = maClient.slides[viewId];if (typeof slide == "undefined") slide = null;return slide;};maClient.getPageBySlideViewId = function(viewId) { return maClient.getPageByPageNumber(maClient.getSlide(viewId).pageNumber);};maClient.lookupString = function(index) { return maTour.stringTable[index];};maClient.waitForClientReady = function() { if (!maClient.mapIsHtml5) { maClient.mapLoaded = true;maClient.map = document.getElementById(maTour.editMode ? "fsmapEditor" : "fsmapViewer");} clearTimeout(maClient.waitForClientReadyIntervalId);if (!maClient.ready) { maClient.waitForClientReadyCount++;if (maClient.waitForClientReadyCount > 50) return;maClient.waitForClientReadyIntervalId = setTimeout("maClient.waitForClientReady();", 100);return;} if (maClient.mapIsHtml5) { try { maClient.map = new maClient.Html5();} catch (error) { alert("MapsAlive could not load its HTML5 JavaScript libary. This can happen if the <script> tag for mapviewer.js is missing.");} try { maClient.map.loadMap();} catch (error) { return;} } var slideId = maGetQueryStringArg("hotspot");if (slideId.length === 0) { slideId = maGetQueryStringArg("slide");} if (slideId.length === 0) { var viewId = maGetQueryStringArg("marker");if (viewId.length) { slideId = maClient.getSlide(viewId).slideId;} } if (slideId.length !== 0) { maClient.hotspotOnQueryString = true;} if (slideId.length === 0 && maClient.restoredViewId !== 0) { slideId = maClient.getSlide(maClient.restoredViewId).slideId;} var slide = null;maClient.viewIdToShowWhenMapLoaded = 0;if (slideId.length !== 0) { slide = maClient.getSlideBySlideId(slideId);} if (slide !== null) { maClient.viewIdToShowWhenMapLoaded = slide.viewId;} else if (maTour.selectedViewId && !maClient.usesHidablePopup) { if (maTour.usesFixedPopup) { maClient.showPopup(true);} maTour.marker.viewId = maTour.selectedViewId;maClient.changeSlide(false);if (!maTour.infoPage && maClient.map) { maClient.map.setMarkerSelectedState(maTour.selectedViewId);} } if (!maClient.mapIsHtml5) { maClient.onMapLoaded();if (maClient.opera) maClient.showOperaWarning();} var v = document.getElementById("maRuntimeVersion");if (v) v.innerHTML = maClient.runtimeVersion;};maClient.onMapLoaded = function() { maClient.mapLoaded = true;if (maClient.viewIdToShowWhenMapLoaded !== 0) { maClient.showSlide(maClient.viewIdToShowWhenMapLoaded, maClient.restoredViewId === 0);} if (maTour.hasDirectory && maTour.dir.staysOpen) { maClient.dirShow(true);} if (typeof maOnMapLoaded != "undefined") maOnMapLoaded();};maClient.showOperaWarning = function() { var map = document.getElementById('maMap');if (!map) return;maClient.operaWarning = document.createElement("div");map.appendChild(maClient.operaWarning);var s = maClient.operaWarning.style;s.left = '20px';s.top = '20px';s.zIndex = '6000';s.position = 'absolute';s.border = 'solid 2px #000000';s.color = '#000000';s.opacity = 0.75;s.backgroundColor = '#fafac6';s.fontSize = '10px';s.fontFamily = "Verdana, Arial, Helvetica, Sans-Serif";s.padding = '4px';s.textAlign = 'center';s.visibility = 'visible';s.width = '160px';var msg = "<b>Opera Browser Warning</b><br/><br/>Some features of this interactive map might not be supported by Opera.";msg += "<br/><br/><span style='cursor:pointer;' onclick='maClient.operaWarning.style.visibility=\"hidden\";'>[Close]</span>";maClient.operaWarning.innerHTML = msg;};maClient.showSlide = function(viewId, isDirEntry) { if (viewId == -1) return;if (typeof mapViewer == "undefined" && maClient.map === null) { maTour.marker.viewId = parseInt(viewId, 10);maTour.marker.x = 0;maTour.marker.y = 0;maTour.marker.w = 0;maTour.marker.h = 0;maClient.changeSlide(false);} else { if (maTour.usesDynamicPopup) { if (maClient.viewId == viewId && maClient.popupPanel.style.visibility == "visible") { maClosePopup();return;} maClient.pinNextPopup = maTour.popup.pinOnClick || maTour.popup.allowMouseover;} if (maTour.usesPopup) maClient.hidePopup(0);if (maTour.hasDirectory) { maClient.dirShow(false);} maClient.map.selectMarkerAndShowView(viewId, typeof isDirEntry == 'undefined' ? 0 : isDirEntry);} };maClient.showMarker = function(viewId, show) { if (typeof mapViewer == "undefined") return;if (!maClient.mapLoaded) return;maClient.map.showMarkerSelected(viewId, show);};maClient.setText = function(e, index) { if (!e) return;var text;if (index == 1) text = maClient.getSlide(maClient.viewId).title;else text = maClient.getSlide(maClient.viewId).htmlText;try { var noText;if (index == 1) { if (text.length > 0 && text.substring(0,1) == '_') text = text.substring(1);noText = false;} else if (index == 2) { noText = text.length === 0;} e.style.display = noText ? 'none' : 'block';e.innerHTML = noText ? "" : text;} catch(error) { e.innerHTML='The browser reported an error: ' + error.message;} };maClient.setSlideSelector = function() { var dropdownList = document.getElementById('maHotspotDropdown');if (dropdownList) { for (var option = 0; option < dropdownList.options.length; option++) { if (dropdownList.options[option].value == maClient.viewId) { dropdownList.options[option].selected = true;dropdownList.selectedIndex = dropdownList[option].index;break;} } } };maClient.setLeftMenuItem = function() { var slideTitlesInMenu = document.getElementById('maHotspotNamesInMenu');if (slideTitlesInMenu) { var newSelectedViewId = document.getElementById("ma" + maClient.viewId);if (newSelectedViewId) { var oldSelectedViewId = document.getElementById("ma" + maTour.selectedViewId);if (oldSelectedViewId)  oldSelectedViewId.className = '';newSelectedViewId.className = "currentSlide";maTour.selectedViewId = maClient.viewId;} } };maClient.getTextHeight = function(textWidth) { if (textWidth < 0) textWidth = 0;maClient.textArea.style.width = textWidth + "px";maClient.textArea.style.height = "auto";return maClient.textArea.offsetHeight;};maClient.setActualPopupHeight = function(h) { h = Math.max(h, maClient.popupMinH());maTour.popup.actualH = Math.min(h, maClient.popupMaxH());maClient.popupPanel.style.height = maTour.popup.actualH + "px";};maClient.setActualPopupWidth = function(w) { w = Math.max(w, maClient.popupMinW());maTour.popup.actualW = Math.min(w, maClient.popupMaxW());maClient.popupPanel.style.width = maTour.popup.actualW + "px";};maClient.tourLayoutIs = function(list) { var item = list.split(",");for (var i = 0; i < item.length; i++) { if (maTour.layout == item[i]) return true;} return false;};maClient.setFixedLayoutAreaSizes = function() { switch (maTour.layout) { case "HMMIT": case "HITMM": case "VIITT": var spacingV = 0;if (maClient.tourLayoutIs("HMMIT,HITMM")) { if (maClient.slide.mediaW === 0) spacingV = maTour.layoutSpacingV;	 } maClient.mediaArea.style.width = maClient.slide.mediaW + "px";maClient.textArea.style.width = maTour.textAreaW + maClient.slide.mediaDeltaW + spacingV + "px";maClient.textArea.style.left = maClient.textAreaLeft - maClient.slide.mediaDeltaW - spacingV + "px";break;case "HMMTI": case "HTIMM": case "VTTII": var mediaArea = document.getElementById("maAbsBlock");mediaArea.style.width = maClient.slide.mediaW + "px";var imageLeft = maTour.layoutMarginLeft + maTour.textAreaW + maClient.slide.mediaDeltaW + maTour.layoutSpacingV;mediaArea.style.left = imageLeft + "px";maClient.textArea.style.width = (imageLeft - maTour.layoutSpacingV - maTour.layoutMarginLeft) + "px";break;case "VMMTI": case "VTIMM": maClient.textArea.style.height = "auto";var textH = maClient.calculateTextAreaHeight();if (maClient.textArea.offsetHeight >= textH) maClient.textArea.style.height = textH + "px";if (maClient.slideMediaIsEmbed()) { var mediaH = maTour.canvasH - maTour.layoutMarginTop - maClient.textArea.offsetHeight - maTour.layoutSpacingH - maTour.layoutMarginBottom;maClient.mediaArea.style.height = mediaH + "px";} else { maClient.mediaArea.style.height = "auto";} break;case "HTTII": maClient.textArea.style.height = maClient.calculateTextAreaHeight() + "px";break;case "VMMIT": case "VITMM": case "HIITT": if (maClient.slideMediaIsEmbed()) { maClient.mediaArea.style.height = maClient.slide.mediaH + "px";} else { maClient.mediaArea.style.height = maClient.slide.mediaH + "px";} var noTopImage = maClient.slide.mediaH === 0;maClient.textArea.style.marginTop = (noTopImage ? 0 : maTour.layoutSpacingH) + "px";maClient.mediaArea.style.display = noTopImage ? "none" : "block";maClient.textArea.style.height = maClient.calculateTextAreaHeight() + "px";break;default: break;} };maClient.calculateTextAreaHeight = function() { var noTopImage = maClient.slide.mediaH === 0;var spacingH = noTopImage ? 0 : maTour.layoutSpacingH;var textH = maTour.canvasH - maTour.layoutMarginTop - maClient.slide.mediaH - spacingH - maTour.layoutMarginBottom;if (textH < 0) textH = 0;return textH;};maClient.slideImageSrc = function(slide) { if (slide.imageLoaded) { return slide.image.src;} else { return slide.imageSrc;} };maClient.slideMediaIsEmbed = function() { return maClient.slide.mediaType == 1;};maClient.setSlideMedia = function() { var showMedia = maClient.slide.mediaW > 0 && maClient.slide.mediaH > 0;if (showMedia) { if (maClient.slideMediaIsEmbed()) { maClient.mediaArea.innerHTML = maClient.getSlide(maClient.viewId).embedText;} else { var mediaW = maClient.slide.mediaW + "px";var mediaH = maClient.slide.mediaH + "px";var src = maClient.slideImageSrc(maClient.slide);maClient.mediaArea.innerHTML = "<img id='" + "maHotspotImage" + "' src='" + src + "' style='" + "width:" + mediaW + ";height:" + mediaH + "' />";} } else { maClient.mediaArea.innerHTML = "";} };maClient.setLiveData = function(slide) { slide.liveDataUpdateTime = (new Date()).getTime();	 slide.liveDataRequestPending = false;if (maClient.viewId === 0 || maClient.slide.viewId != slide.viewId) return;if (maClient.slide.htmlText == maClient.loadingGraphic() && maClient.slideText) maClient.slide.htmlText = "";maClient.setLiveDataText(slide);};maClient.setLiveDataText = function(slide) { maClient.setSlideText();if (maTour.usesPopup) { maClient.setPopupSize();maClient.setPopupLocation(false);} else { maClient.setFixedLayoutAreaSizes();} };maClient.getLiveData = function(slide) { var message;if (maClient.preview) { message = "Live Data for this slide cannot be requested from your server while in Tour Preview. This is normal behavior.";maClient.reportLiveDataError(slide, null, message, script);} else { var script = slide.messengerFunction;if (script.length === 0) { message = "This Live Data slide is missing its messenger function.";maClient.reportLiveDataError(slide, null, message, "<i>Missing</i>");} else { try { eval(script);} catch (error) { maClient.reportLiveDataError(slide, null, error.message, script);} } } };function maLiveDataErrorSettings(message, color, backgroundColor, showDetail) { this.message = message;this.color = color;this.backgroundColor = backgroundColor;this.showDetail = showDetail;} maClient.reportLiveDataError = function(slide, request, message, script) { var settings = maClient.liveDataErrorSettings;if (settings === null) { if (maClient.preview) settings = new maLiveDataErrorSettings(message, "green", "#eee", false);else settings = new maLiveDataErrorSettings("Data could not be obtained from the server.", "red", "#eee", true);} var html = "<div>" + settings.message + "</div>";if (settings.showDetail) { var reason = message;if (script !== null && !maClient.preview) reason = "An error occurred while requesting Live Data.";html += "<hr/>";html += "<table>";html += "<tr><td valign='top' style='font-weight:bold;'>Reason:</td><td>" + reason + "</td></tr>";if (request !== null) { html += "<tr><td valign='top' style='font-weight:bold;'>Slide Title:</td><td>" + request.slide.title + "</td></tr>";html += "<tr><td valign='top' style='font-weight:bold;'>Slide Id:</td><td>" + request.slide.slideId + "</td></tr>";html += "<tr><td valign='top' style='font-weight:bold;'>Server URL:</td><td>" + request.url + "</td></tr>";html += "<tr><td valign='top' style='font-weight:bold;'>Parameters:</td><td>" + request.parameters + "</td></tr>";var plural = request.cachePeriodSeconds !== 1 ? "s" : "";html += "<tr><td valign='top' style='font-weight:bold;'>Cache Period:</td><td>" + request.cachePeriodSeconds + " second" + plural + "</td></tr>";} if (typeof script != "undefined") { html += "<tr><td valign='top' style='font-weight:bold;'>JavaScript:</td><td>" + script + "</td></tr>";} if (!maClient.preview) html += "<tr><td valign='top' style='font-weight:bold;'>Error:</td><td>" + message + "</td></tr>";html += "</table>";} var overflow = maClient.textArea ? "" : "height:" + (maClient.slide.mediaH - 12) + "px;overflow:scroll;";html = "<div style='" + overflow + "font-family:sans-serif;font-size:11px;border:solid 1px gray;padding:4px;" + "color:" + settings.color + ";background-color:" + settings.backgroundColor + ";'>" + html + "</div>";html = unescape(html);if (maClient.textArea) slide.htmlText = html;else slide.media = html;maClient.setLiveData(slide);slide.liveDataUpdateTime = 0;};maClient.setSlideText = function() { if (maTour.showSlideTitle) maClient.setText(maClient.slideTitle, 1);maClient.setText(maClient.slideText, 2);};maClient.changeSlide = function(mouseIsOverMarker) { maClient.viewId = maTour.marker.viewId;maClient.slide = maClient.getSlide(maClient.viewId);if (maClient.slide === null) { return;} maClient.setSlideText();if (maTour.usesPopup) { maClient.setPopupSize();maClient.setPopupLocation(mouseIsOverMarker);} else { maClient.setFixedLayoutAreaSizes();} maClient.setSlideSelector();maClient.setLeftMenuItem();if (maClient.hasMedia) maClient.setSlideMedia();if (maClient.slide.usesLiveData) { if (maClient.slideText && maClient.slide.htmlText.length === 0 && maClient.slide.liveDataUpdateTime === 0) { maClient.slide.htmlText = maClient.loadingGraphic();maClient.slideText.style.display = "block";maClient.setLiveDataText(maClient.slide);} maClient.getLiveData(maClient.slide);} };maClient.loadingGraphic = function() { return "<img width='15' height='15' src='" + maClient.graphics["loading"].src + "'/>";};maClient.getScrollingPosition = function() { var position = [0, 0];if (typeof window.pageYOffset != 'undefined') { position = [window.pageXOffset,	window.pageYOffset];} else if (typeof document.documentElement.scrollTop != 'undefined' && (document.documentElement.scrollTop > 0 || document.documentElement.scrollLeft > 0)) { position = [document.documentElement.scrollLeft, document.documentElement.scrollTop];} else if (typeof document.body.scrollTop != 'undefined') { position = [document.body.scrollLeft, document.body.scrollTop];} return position;};maClient.getViewportSize = function() { var size = [0, 0];if (typeof window.innerWidth != 'undefined') { size = [window.innerWidth,	window.innerHeight];} else if (typeof document.documentElement != 'undefined'	&& typeof document.documentElement.clientWidth != 'undefined' && document.documentElement.clientWidth !== 0) { size = [document.documentElement.clientWidth, document.documentElement.clientHeight];} else { size = [document.getElementsByTagName('body')[0].clientWidth, document.getElementsByTagName('body')[0].clientHeight];} size[0] -= 16;size[1] -= 16;return size;};maClient.getRect = function(side, size, scrollPosition) { var rect = new Object();var absX = parseInt(maTour.marker.absX,10);var absY = parseInt(maTour.marker.absY,10);var scrollW = scrollPosition[0];var scrollH = scrollPosition[1];var w = size[0];var h = size[1];switch (side) { case "top": rect.x = scrollW;rect.y = scrollH;rect.w = w;rect.h = absY - scrollH;break;case "bottom": rect.x = scrollW;rect.y = scrollH + absY;rect.w = w;rect.h = h - (absY - scrollH);break;case "right": rect.x = scrollW + absX;rect.y = scrollH;rect.w = w - (absX - scrollW);rect.h = h;break;case "left": rect.x = scrollW;rect.y = scrollH;rect.w = absX - scrollW;rect.h = h;break;default: break;} if (rect.w < 0) rect.w = 0;if (rect.h < 0) rect.h = 0;var e = document.getElementById("maHotspotDropdown");if (e) { var ddH = 24;var ddW = e.offsetWidth;var ddPt = maClient.tagLocation(null, "maHotspotDropdown");var ddBottom = ddPt.y + ddH;var ddLeft = ddPt.x + scrollW;var ddRight = ddLeft + ddW;var ddLeftInRect = ddLeft >= rect.x && ddLeft <= rect.x + rect.w;var ddRightInRect = ddRight >= rect.x && ddRight <= rect.x + rect.w;var ddBottomInRect = ddBottom >= rect.y;if (ddBottomInRect && (ddLeftInRect || ddRightInRect)) { rect.h = absY - ddBottom;rect.y = ddBottom;} } return rect;};maClient.clippedArea = function(popupW, popupH, areaW, areaH) { var deltaW = Math.max(popupW - areaW, 0);var deltaH =  Math.max(popupH - areaH, 0);var clippedV = 0;var clippedH = 0;if (deltaW > 0) clippedV = deltaW * popupH;if (deltaH > 0) clippedH = deltaH * (popupW - deltaW);return clippedV + clippedH;};maClient.tagLocation = function(outerTagId, innerTagId) { var e = document.getElementById(innerTagId);var left = 0;var top = 0;while (e && (outerTagId === null || e.id != outerTagId)) { left += e.offsetLeft;top += e.offsetTop;e = e.offsetParent;} var pt = new Object();pt.x = left;pt.y = top;return pt;};maAttachEventListener(window, "load", maEndLoad);maAttachEventListener(document, "mousemove", maCaptureMousePosition);if (maClient.firefox) {     maAttachEventListener(window, "scroll", maScrollEvent);    maClient.scrollToggle = 0;} if (typeof soundManager != "undefined") { soundManager.onready(function(status) { maClient.soundManagerReady = status.success;if (typeof maOnSoundManagerReady != "undefined") maOnSoundManagerReady();});} function maScrollEvent() { if (maTour.editMode) return;clearInterval(maClient.scrollEventIntervalId);maClient.scrollEventIntervalId = setTimeout("maClient.scrollStopped()", 500);} maClient.scrollStopped = function() { var map = maClient.map;if (map) map.width = maTour.stageW + (maClient.scrollToggle === 0 ? 1 : 0);maClient.scrollToggle = maClient.scrollToggle === 0 ? 1 : 0;};function maEndLoad() { var maMap = document.getElementById('maMap');if (maMap && !maClient.mapIsFlash && !maClient.mapIsHtml5) { maClient.showRenderErrorMessage();} if (maTour.editMode) { maClient.ready = true;return;} maClient.usesHidablePopup = maTour.usesDynamicPopup || (maTour.usesFixedPopup && maTour.popup.location == maClient.popupLocationFixedPopup) ? 1 : 0;maClient.isTouchDevice = 'ontouchend' in document;maClient.useTouchCss = maClient.isTouchDevice || maTour.useTouchUiOnDeskop;if (maClient.isTouchDevice && maTour.usesPopup) { maTour.popup.delay = 0;} maClient.loadGraphics();maClient.loadPageTable();maClient.loadSlideTable();maClient.preLoadSlideImages();maClient.initClientState();maClient.initLayouts();maClient.dirInit();maClient.ready = true;if (maTour.infoPage || !maMap || maClient.mapIsHtml5) { maClient.waitForClientReady();} } maClient.loadGif = function(id, name) { maClient.loadImg(id, name, "gif");};maClient.loadImg = function(id, name, ext) { var image = new Image();image.src = maClient.path + "00" + id + "_" + maTour.version + "." + ext;maClient.graphics[name] = image;};maClient.loadGraphics = function() { maClient.graphics = new Object();maClient.loadGif(21, "loading");maClient.loadGif(22, "loading2");maClient.loadImg(29, "closeInstructionsX", "png");if (maTour.usesPopup) { maClient.loadGif(24, "closeX");maClient.loadGif(25, "pinUp");maClient.loadGif(26, "pinDown");maClient.loadGif(27, "pinAnimated");maClient.loadImg(28, "closeTouchX", "png");if (maTour.popup.arrowType !== 0) { maClient.loadGif(30, "left1");maClient.loadGif(31, "left2");maClient.loadGif(32, "right1");maClient.loadGif(33, "right2");maClient.loadGif(34, "up1");maClient.loadGif(35, "up2");maClient.loadGif(36, "down1");maClient.loadGif(37, "down2");} } if (maTour.hasDirectory) { maClient.loadImg(50, "sortAlpha", "png");maClient.loadImg(51, "sortGroup", "png");} };maClient.initClientState = function() { maClient.showingTooltip = false;maClient.showingPopup = false;maClient.popupIsPinned = false;maClient.maTour = document.getElementById('maTour');maClient.slide = maClient.getSlide(maTour.selectedViewId);};maClient.initLayouts = function() { if (maTour.usesPopup) maClient.initPopupLayouts();else maClient.initFixedLayouts();};maClient.preLoadSlideImages = function() { if (maClient.slidesImageList.length > 0 && (!maClient.mobile || maTour.enableImagePreloading)) { maClient.okayToPreload = true;maClient.preloadIntervalId = setInterval(maClient.loadNextSlideImage, 10);} };maClient.loadPageTable = function() { var pages = new Object();for (var pageIndex = 0; pageIndex < maTour.pageTable.length; pageIndex++) { var data = maTour.pageTable[pageIndex].split(',');var pageId = maClient.lookupString(data[0]);var pageNumber = data[1];var page = new maPage( pageId, pageNumber);pages[pageNumber] = page;} maClient.pages = pages;};maClient.loadSlideTable = function() { for (var stringIndex = 0; stringIndex < maTour.stringTable.length; stringIndex++) { var text = unescape(maTour.stringTable[stringIndex]);text = text.replace(/src=":/g, 'src="' + maClient.path);maTour.stringTable[stringIndex] = text;} var div = document.createElement("div");maClient.slidesImageList = new Array();maClient.slideListIndex = 0;var slides = new Object();for (var slideIndex = 0; slideIndex < maTour.slideTable.length; slideIndex++) { var data = maTour.slideTable[slideIndex].split(',');var viewId = data[0];var pageNumber = data[1];var slideId = maClient.lookupString(data[2]);var titleText = maClient.lookupString(data[3]);var htmlText = maClient.lookupString(data[4]);var plainText = "";var imageSrc = maClient.lookupString(data[5]);var mediaW = parseInt(data[6], 10);var mediaH = parseInt(data[7], 10);var mediaType = parseInt(data[8], 10);var embedText = maClient.lookupString(data[9]);var slideW = parseInt(data[10], 10);var slideH = parseInt(data[11], 10);var usesLiveData = parseInt(data[12], 10) == 1;var messengerFunction = maClient.lookupString(data[13]);var dirPreviewImageUrl = maClient.lookupString(data[14]);var dirPreviewText = maClient.lookupString(data[15]);if (maTour.hasDirectory) { div.innerHTML = htmlText;plainText = maClient.getInnerText(div);} var slide = new maSlide( viewId, pageNumber, slideId, titleText, htmlText, plainText, imageSrc, mediaW, mediaH, mediaType, embedText, slideW, slideH, usesLiveData, messengerFunction, dirPreviewImageUrl, dirPreviewText);slides[viewId] = slide;if (mediaW > 0) { maClient.slidesImageList.push(slide);} } maClient.slides = slides;};maClient.popupMaxH = function() { return maClient.slide && maClient.slide.slideH > 0 ? maClient.slide.slideH : maTour.popup.maxH;};maClient.popupMaxW = function() { return maClient.slide && maClient.slide.slideW > 0 ? maClient.slide.slideW : maTour.popup.maxW;};maClient.popupMinH = function() { return maClient.slide && maClient.slide.slideH > 0 ? maClient.slide.slideH : maTour.popup.minH;};maClient.popupMinW = function() { return maClient.slide && maClient.slide.slideW > 0 ? maClient.slide.slideW : maTour.popup.minW;};maClient.popupTextOnlyW = function() { return maClient.slide && maClient.slide.slideW > 0 ? maClient.slide.slideW : maTour.popup.textOnlyW;};maClient.getInnerText = function(e) { var plainText = e.innerText;if (typeof plainText == 'undefined') plainText = e.textContent;if (typeof plainText == 'undefined' || (plainText.length === 0 && maClient.safariLt3)) { plainText = e.innerHTML.replace(/<[^>]*>/g,'');} return plainText;};maClient.deriveAltColor = function(hexColor) { var hex = '0123456789abcdefe';var c = hexColor.substr(6,1);var i = hex.indexOf(c.toLowerCase());return hexColor.substr(0,6) + hex.substr(i + 1,1);};maClient.MapViewer = function() { maClient.mapIsEditor = false;this.emitMapHtml();};maClient.MapEditor = function(editorUsage) { maClient.mapIsEditor = true;this.emitMapHtml(editorUsage);};maClient.MapViewer.prototype = maClient.Flash.prototype;maClient.MapEditor.prototype = maClient.Flash.prototype;maClient.showTooltip = function(x, y, tooltip) { if (tooltip.length === 0) return;if (!maClient.tooltip) { maClient.tooltip = document.createElement("div");maClient.tooltip.setAttribute("id", "maTooltip");document.body.appendChild(maClient.tooltip);} maClient.tooltip.innerHTML = tooltip;maClient.tooltip.style.visibility = "visible";maClient.showingTooltip = true;if (maClient.slideShowIsRunning || maClient.mobile) { var mapLocation = maClient.tagLocation(null, "maMap");x += mapLocation.x;y += mapLocation.y;var s = maClient.tooltip.style;s.left = x + 'px';s.top = y + 'px';if (maClient.mobile) { if (typeof maClient.hideTooltipIntervalId != "undefined") clearInterval(maClient.hideTooltipIntervalId);maClient.hideTooltipIntervalId = setTimeout("maClient.hideTooltip();", 2000);} } else { maClient.moveTooltip();} };maClient.hideTooltip = function() { if (maClient.showingTooltip) { maClient.tooltip.style.visibility= "hidden";maClient.showingTooltip = false;} };maClient.moveTooltip = function() { if (maClient.showingPopup && maTour.popup.location != maClient.popupLocationFixedAlwaysVisible) { maClient.hideTooltip();return;} if (maClient.slideShowIsRunning) { return;} var s = maClient.tooltip.style;s.left = (parseInt(maClient.mouseX, 10) + 8) + 'px';s.top = (parseInt(maClient.mouseY, 10) - 12) + 'px';};function maOnImageError() { maClient.okayToPreload = true;} function maOnImageLoad() { this.slide.imageLoaded = true;maClient.okayToPreload = true;} maClient.loadNextSlideImage = function() { if (maClient.okayToPreload) { maClient.okayToPreload = false;var slide = maClient.slidesImageList[maClient.slideListIndex];maClient.slideListIndex++;if (maClient.slideListIndex >= maClient.slidesImageList.length) clearInterval(maClient.preloadIntervalId);if (slide.imageSrc) slide.image.src = slide.imageSrc;} };function maPage(pageId, pageNumber) { this.pageId = pageId;this.pageNumber = pageNumber;} function maSlide( viewId, pageNumber, slideId, title, htmlText, plainText, imageSrc, mediaW, mediaH, mediaType, embedText, slideW, slideH, usesLiveData, messengerFunction, dirPreviewImageUrl, dirPreviewText) { this.viewId = viewId;this.pageNumber = pageNumber;this.slideId = slideId;this.title = title;this.htmlText = htmlText;this.plainText = plainText;this.imageSrc = imageSrc && imageSrc.length > 0 ? maClient.path + imageSrc : null;this.mediaW = mediaW;this.mediaH = mediaH;this.mediaDeltaW = Math.max(0, maTour.mediaAreaW - mediaW);this.imageLoaded = false;if (mediaW > 0) { this.image = new Image();this.image.slide = this;this.image.onload = maOnImageLoad;this.image.onerror = maOnImageError;} this.mediaType = mediaType;this.embedText = embedText;this.slideW = slideW;this.slideH = slideH;this.inSearchResults = true;this.searchStart = -1;this.searchLength = 0;this.usesLiveData = usesLiveData;this.messengerFunction = messengerFunction;this.liveDataUpdateTime = 0;this.liveDataCachePeriodMs = 0;this.liveDataRequestPending = false;this.dirPreviewImageUrl = dirPreviewImageUrl;this.dirPreviewText = dirPreviewText;this.media = null;} maClient.runtimeImage = function(id, ext) { return maClient.path + "00" + id + "_" + maTour.version + "." + ext;};function maClosePopup() { if (maClient.popupPanel && maTour.popup.location != maClient.popupLocationFixedAlwaysVisible) { maClient.hidePopup(0);} } function maClosePopupX() { maClient.clickedCloseX = true;maClosePopup();} maClient.attachPopupListeners = function(e) { if (maClient.isTouchDevice) { return;} if (maTour.popup.location == maClient.popupLocationFixedAlwaysVisible) { return;} if (maTour.popup.location == maClient.popupLocationMouse && !maTour.popup.allowMouseover) { return;} maAttachEventListener(e, "mouseover", maPopupMouseOver);maAttachEventListener(e, "mouseout", maPopupMouseOut);};maClient.initFixedLayouts = function() { maClient.mediaArea = document.getElementById("maHotspotMediaArea");maClient.textArea = document.getElementById("maTextArea");maClient.slideTitle = document.getElementById("maHotspotTitle");maClient.slideText = document.getElementById("maHotspotText");maClient.hasMedia = maClient.mediaArea !== null;if (maClient.hasMedia) { maClient.mediaArea.style.overflow = "hidden";if (maClient.mobile) { maClient.mediaArea.style.backgroundImage = "url(" + maClient.graphics["loading2"].src + ")";maClient.mediaArea.style.backgroundRepeat = "no-repeat";maClient.mediaArea.style.backgroundPosition = "center center";} } if (maClient.textArea) { maClient.textArea.style.overflow = "auto";if (maClient.textArea.style.position == "absolute") { var leftPx = maClient.textArea.style.left;maClient.textAreaLeft = parseInt(leftPx.substr(0, leftPx.length - 2),10);} } switch (maTour.layout) { case "HMMIT": case "HITMM": case "HMMTI": case "HTIMM": case "VIITT": case "VTTII": maClient.setFixedTextAndMediaHeight();break;case "HIITT": case "HTTII": case "VMMIT": case "VMMTI": case "VTIMM": case "VITMM": maClient.setFixedTextAndMediaWidth();break;case "HII": case "HMMII": case "HIIMM": case "VMMII": case "VIIMM": maClient.setFixedMediaWidthAndHeight();break;case "HTT": case "HMMTT": case "HTTMM": case "VMMTT": case "VTTMM": maClient.setFixedTextWidthAndHeight();break;case "HIIMT": case "HIITM": case "HMTII": case "HTMII": case "VIIMT": case "VIITM": case "VMTII": case "VTMII": case "HTTMI": case "HTTIM": case "HMITT": case "HIMTT": case "VTTMI": case "VTTIM": case "VMITT": case "VIMTT": maClient.setFixedTextWidthAndHeight();maClient.setFixedMediaWidthAndHeight();break;case "HMM": break;default: break;} };maClient.setFixedTextWidthAndHeight = function() { maClient.textArea.style.width = maTour.textAreaW + "px";maClient.textArea.style.height = maTour.textAreaH + "px";};maClient.setFixedMediaWidthAndHeight = function() { maClient.mediaArea.style.width = maTour.mediaAreaW + "px";maClient.mediaArea.style.height = maTour.mediaAreaH + "px";};maClient.setFixedTextAndMediaWidth = function() { maClient.textArea.style.width = maTour.textAreaW + "px";maClient.mediaArea.style.width = maTour.mediaAreaW + "px";};maClient.setFixedTextAndMediaHeight = function() { maClient.textArea.style.height = maTour.textAreaH + "px";maClient.mediaArea.style.height = maTour.mediaAreaH + "px";};maClient.initPopupLayouts = function() { var zindex = maTour.usesFixedPopup ? 3000 : 5000;if (maTour.usesFixedPopup) { maTour.popup.arrowType = 0;} if (maTour.popup.arrowType !== 0) { e = document.createElement("img");e.setAttribute("id", "maArrow");e.style.visibility = "hidden";e.style.zIndex = zindex + 1;e.style.position = "absolute";e.style.top = "0px";e.style.left = "0px";document.body.appendChild(e);maClient.arrowPanel = e;if (maTour.usesDynamicPopup) { maClient.attachPopupListeners(maClient.arrowPanel);if (maTour.popup.pinOnClick) maAttachEventListener(maClient.arrowPanel, "click", maPopupClickPin);} } maTour.popup.backgroundColorAlt = maClient.deriveAltColor(maTour.popup.backgroundColor);e = document.createElement("div");e.setAttribute("id", "maPopup");e.style.visibility = "hidden";e.style.zIndex = zindex;e.style.position = "absolute";e.style.backgroundColor = maTour.popup.backgroundColor;e.style.borderTop = maTour.popup.borderTop;e.style.borderRight = maTour.popup.borderRight;e.style.borderBottom = maTour.popup.borderBottom;e.style.borderLeft = maTour.popup.borderLeft;maClient.popupPanelWidth = maClient.popupMaxW();if (maTour.usesFixedPopup) { e.style.top = maTour.popup.top + "px";e.style.left = maTour.popup.left + "px";maClient.maTour.appendChild(e);} else { e.style.top = "0px";e.style.left = "0px";document.body.appendChild(e);} maClient.popupPanel = e;maClient.attachPopupListeners(maClient.popupPanel);maClient.popupControlPanelH = 16;e = document.createElement("div");e.id = "maPopupControlPanel";e.style.height = maClient.popupControlPanelH + "px";e.style.zIndex = zindex;e.style.position = "absolute";e.style.backgroundColor = maTour.popup.borderColor;e.style.fontSize = "6px";maClient.popupControlPanel = e;document.body.appendChild(maClient.popupControlPanel);maTour.popup.borderColorAlt = maClient.deriveAltColor(maTour.popup.borderColor);e = document.createElement("img");e.onclick = maClosePopupX;e.style.display = "none";if (maClient.useTouchCss) { maClient.popupControlCloseButtonH = 44;e.src = maClient.graphics["closeTouchX"].src;e.style.width = maClient.popupControlCloseButtonH + "px";e.style.height = maClient.popupControlCloseButtonH + "px";} else { maClient.popupControlCloseButtonH = 12;e.src = maClient.graphics["closeX"].src;e.style.width = maClient.popupControlCloseButtonH + "px";e.style.height = maClient.popupControlCloseButtonH + "px";} e.style.zIndex = zindex + 2;e.style.position = "absolute";e.style.cursor = "pointer";document.body.appendChild(e);maClient.popupControlPanelCloseX = e;if (maTour.popup.pinOnClick) { e = document.createElement("img");e.id = "maPopupPin";e.onclick = maPopupClickPin;e.style.display = "none";e.style.width = "14px";e.style.height = "14px";e.style.zIndex = zindex + 2;e.style.position = "absolute";e.style.cursor = "pointer";document.body.appendChild(e);maClient.popupControlPanelPin = e;e = document.createElement("div");e.id = "maPopupPinMsg";e.style.display = "none";e.style.color = "#ffffff";e.innerHTML = maTour.popup.pinMsg;e.style.fontFamily = "arial,helvetica,sans-serif";e.style.fontSize = "9px";e.style.overflow = "hidden";e.style.height = "14px";e.style.zIndex = zindex + 1;e.style.position = "absolute";e.style.cursor = "pointer";document.body.appendChild(e);maClient.popupControlPanelPinMsg = e;} maClient.attachPopupListeners(maClient.popupControlPanel);if (maTour.popup.pinOnClick) { maClient.attachPopupListeners(maClient.popupControlPanelPin);maClient.attachPopupListeners(maClient.popupControlPanelPinMsg);} var mT = maTour.layoutMarginTop + "px ";var mR = maTour.layoutMarginRight + "px ";var mB = maTour.layoutMarginBottom + "px ";var mL = maTour.layoutMarginLeft + "px ";var mH = maTour.layoutSpacingH + "px ";var mV = maTour.layoutSpacingV + "px ";var mNone = "0px ";if (maClient.tourLayoutIs("HTT,HMM")) { maClient.hasMedia = false;} else { maClient.hasMedia = true;maClient.mediaArea = document.createElement("div");maClient.mediaArea.setAttribute("id", "maHotspotMediaArea");maClient.mediaArea.style.margin = mT + mR + mNone + mL;maClient.mediaArea.style.overflow = "hidden";if (maClient.mobile) { maClient.mediaArea.style.backgroundImage = "url(" + maClient.graphics["loading2"].src + ")";maClient.mediaArea.style.backgroundRepeat = "no-repeat";maClient.mediaArea.style.backgroundPosition = "center center";} } if (!maClient.tourLayoutIs("HII,HMM")) { maClient.textArea = document.createElement("div");maClient.textArea.setAttribute("id", "maTextArea");if (maTour.showSlideTitle) { maClient.slideTitle = document.createElement("div");maClient.slideTitle.setAttribute("id", "maHotspotTitle");maClient.textArea.appendChild(maClient.slideTitle);} maClient.slideText = document.createElement("div");maClient.slideText.setAttribute("id", "maHotspotText");maClient.slideText.style.marginTop = (maTour.showSlideTitle ? 4 : 0) + "px";maClient.textArea.appendChild(maClient.slideText);} switch (maTour.layout) { case "HIITT": maClient.mediaArea.style.margin = mT + mR + mH + mL;maClient.textArea.style.margin = "0px " + mR + mB + mL;maClient.popupPanel.appendChild(maClient.mediaArea);maClient.popupPanel.appendChild(maClient.textArea);maClient.popupPanel.style.width = maClient.popupPanelWidth + "px";break;case "HTTII": maClient.mediaArea.style.margin = mH + mR + mB + mL;maClient.textArea.style.margin = mT + mR + "0px " + mL;maClient.popupPanel.appendChild(maClient.textArea);maClient.popupPanel.appendChild(maClient.mediaArea);maClient.popupPanel.style.width = maClient.popupPanelWidth + "px";break;case "VIITT": case "VTTII": var table = document.createElement("table");var tbody = document.createElement("tbody");table.setAttribute("cellPadding", "0");table.setAttribute("cellSpacing", "0");var row = document.createElement("tr");var cell1 = document.createElement("td");var cell2 = document.createElement("td");cell1.style.verticalAlign = "top";cell2.style.verticalAlign = "top";row.appendChild(cell1);row.appendChild(cell2);tbody.appendChild(row);table.appendChild(tbody);maClient.popupPanel.appendChild(table);if (maTour.layout == "VIITT") { maClient.textArea.style.margin = mT + mR + mB + mNone;cell2.style.textAlign = "left";maClient.mediaArea.style.margin = mT + mV + mB + mL;cell1.appendChild(maClient.mediaArea);cell2.appendChild(maClient.textArea);} else { maClient.textArea.style.margin = mT + mNone + mB + mL;cell1.style.textAlign = "left";maClient.mediaArea.style.margin = mT + mR + mB + mV;cell1.appendChild(maClient.textArea);cell2.appendChild(maClient.mediaArea);} break;case "HII": maClient.mediaArea.style.margin = mT + mR + mB + mL;maClient.popupPanel.appendChild(maClient.mediaArea);break;case "HTT": maClient.textArea.style.margin = mT + mR + mB + mL;maClient.popupPanel.appendChild(maClient.textArea);maClient.popupPanel.style.width = maClient.popupPanelWidth + "px";break;default: break;} };maClient.clearAfterDelay = function() { if (typeof maClient.popupDelayAfterIntervalId != "undefined") clearInterval(maClient.popupDelayAfterIntervalId);};maClient.clearBeforeDelay = function() { if (typeof maClient.popupDelayBeforeIntervalId != "undefined") { clearInterval(maClient.popupDelayBeforeIntervalId);} };maClient.hidePopup = function(delay) { maClient.clearAfterDelay();if (delay > 0) { maClient.popupDelayAfterIntervalId = setTimeout("maClient.showPopup(false);", delay);} else { var notifyApi = maClient.popupIsPinned;maClient.showPopup(false);if (notifyApi) { if (typeof maOnHotspotChanged != "undefined") maOnHotspotChanged(0);if (typeof maOnPopupClosed != "undefined") maOnPopupClosed(maClient.slide.slideId);} } };maClient.pinPopup = function() { maClient.popupIsPinned = true;maClient.popupSetControlPanelState(true, true);};maClient.getPopupLocation = function(mouseIsOverMarker) { var popupLocation = maTour.popup.location;if ((popupLocation == maClient.popupLocationMouse && !mouseIsOverMarker) || maClient.slideShowIsRunning) { popupLocation = maClient.popupLocationMarkerEdge;} var markerX = parseInt(maTour.marker.x, 10);var markerY = parseInt(maTour.marker.y, 10);var markerW = parseInt(maTour.marker.w, 10);var markerH = parseInt(maTour.marker.h, 10);var scrollPosition = maClient.getScrollingPosition();var scrollX = scrollPosition[0];var scrollY = scrollPosition[1];var viewPortSize = maClient.getViewportSize();var viewPortW = viewPortSize[0];var viewPortH = viewPortSize[1];var mapLocation = maClient.tagLocation(null, "maMap");var x_ = markerX + (markerW / 2);var offscreenX = mapLocation.x + x_ - viewPortW - scrollX;if (offscreenX > 0 && markerW - offscreenX > 0) { markerW -= offscreenX;markerX -= offscreenX / 2;} var y_ = markerY + (markerH / 2);var offscreenY = mapLocation.y + y_ - viewPortH - scrollY;if (offscreenY > 0 && markerH - offscreenY > 0) { markerH -= offscreenY;markerY -= offscreenY / 2;} /* var debugOutline = document.getElementById("maCustomHtmlAbsolute");if (debugOutline) { debugOutline.style.left = markerX - (markerW / 2) + "px";debugOutline.style.top = markerY - (markerH / 2) + "px";debugOutline.style.width = markerW + "px";debugOutline.style.height = markerH + "px";} */ var arrowSize = 0;if (maTour.popup.arrowType === 0) arrowSize = 0;else if (maTour.popup.arrowType == 1) arrowSize = 18;else if (maTour.popup.arrowType == 2) arrowSize = 36;var arrowOffset = arrowSize > 0 ? arrowSize - maTour.popup.borderWidth + 1 : 0;var locationOffsetX = 0;var locationOffsetY = 0;if (popupLocation == maClient.popupLocationMarkerEdge) { if (maTour.popup.allowMouseover) { if (maTour.popup.arrowType === 0) { locationOffsetX = -2;locationOffsetX = -2;} else { locationOffsetX = markerW >= 16 ? -8 : -2;locationOffsetY = markerH >= 16 ? -8 : -2;} } else { locationOffsetX = 4;locationOffsetY = 4;} } if (popupLocation == maClient.popupLocationMouse) { locationOffsetX = maTour.popup.allowMouseover ? -1 : 4;locationOffsetY = locationOffsetX;} else if (popupLocation == maClient.popupLocationMarkerCenter) { locationOffsetX = (markerW / 2) * -1;locationOffsetY = (markerH / 2) * -1;} locationOffsetX += maTour.popup.markerOffset;locationOffsetY += maTour.popup.markerOffset;var popupOffsetX = locationOffsetX + arrowOffset;var popupOffsetY = locationOffsetY + arrowOffset;if (popupLocation == maClient.popupLocationMouse) { maTour.marker.absX = maClient.mouseX;maTour.marker.absY = maClient.mouseY - 4;} else { maTour.marker.absX = Number(mapLocation.x) + Number(markerX);maTour.marker.absY = Number(mapLocation.y) + Number(markerY);popupOffsetX += markerW / 2;popupOffsetY += markerH / 2;} maTour.marker.rectTop = maClient.getRect("top", viewPortSize, scrollPosition);maTour.marker.rectBottom = maClient.getRect("bottom", viewPortSize, scrollPosition);maTour.marker.rectRight = maClient.getRect("right", viewPortSize, scrollPosition);maTour.marker.rectLeft = maClient.getRect("left", viewPortSize, scrollPosition);var borders = maTour.popup.borderWidth * 2;var popupW = maTour.popup.actualW + borders;var popupH = maTour.popup.actualH + borders;var clippedArea = new Object();clippedArea.least = 2147483647;var sideList;switch (maTour.popup.bestSideSequence) { case 0: sideList = "right,left,bottom,top"; break;case 1: sideList = "right,left,top,bottom"; break;case 2: sideList = "right,bottom,top,left"; break;case 3: sideList = "right,bottom,left,top"; break;case 4: sideList = "left,right,top,bottom"; break;case 5: sideList = "left,right,bottom,top"; break;case 6: sideList = "left,top,right,bottom"; break;case 7: sideList = "left,top,bottom,right"; break;case 8: sideList = "bottom,top,left,right"; break;case 9: sideList = "bottom,top,right,left"; break;case 10: sideList = "bottom,left,top,right"; break;case 11: sideList = "bottom,left,right,top"; break;case 12: sideList = "top,bottom,left,right"; break;case 13: sideList = "top,bottom,right,left"; break;case 14: sideList = "top,right,bottom,left"; break;case 15: sideList = "top,right,left,bottom"; break;case 16: sideList = "top"; break;case 17: sideList = "bottom"; break;case 18: sideList = "right"; break;case 19: sideList = "left"; break;default: break;} var bestSide = "";var sides = sideList.split(",");for (var i = 0; i < sides.length; i++) { var sideToTry = sides[i];bestSide = maClient.chooseBestSide(bestSide, sideToTry, clippedArea, popupW, popupH, popupOffsetX, popupOffsetY);} if (maClient.isTouchDevice && maTour.entirePopupVisible && clippedArea.left > 0 && clippedArea.right > 0 && clippedArea.top > 0 && clippedArea.bottom > 0) { pt = new Object();pt.x = mapLocation.x + ((maTour.stageW - popupW) / 2);pt.y = mapLocation.y + ((maTour.stageH - popupH) / 2);if (maTour.popup.arrowType !== 0) { maClient.arrowPanel.style.display = "none";} } else { switch (bestSide) { case "left": case "right": pt = maClient.positionPopupLeftOrRight(bestSide, popupOffsetX, arrowSize);break;case "top": case "bottom": pt = maClient.positionPopupUpOrDown(bestSide, popupOffsetY, arrowSize);break;default: break;} } return pt;};maClient.chooseBestSide = function(bestSide, sideToTry, clippedArea, popupW, popupH, popupOffsetX, popupOffsetY) { switch (sideToTry) { case "top": clippedArea.top = maClient.clippedArea(popupW, popupH, maTour.marker.rectTop.w, maTour.marker.rectTop.h - popupOffsetY);if (clippedArea.top < clippedArea.least) { if (clippedArea.top === 0 || !document.getElementById("maHotspotDropdown")) { if (!maClient.hotspotOnQueryString || clippedArea.top === 0) { clippedArea.least = clippedArea.top;bestSide = "top";} } } break;case "right": clippedArea.right = maClient.clippedArea(popupW, popupH, (maTour.marker.rectRight.w - popupOffsetX), maTour.marker.rectRight.h);if (clippedArea.right < clippedArea.least) { if (!maClient.hotspotOnQueryString || clippedArea.right === 0) { clippedArea.least = clippedArea.right;bestSide = "right";} } break;case "bottom": clippedArea.bottom = maClient.clippedArea(popupW, popupH, maTour.marker.rectBottom.w, maTour.marker.rectBottom.h - popupOffsetY);if (clippedArea.bottom < clippedArea.least) { clippedArea.least = clippedArea.bottom;bestSide = "bottom";} break;case "left": clippedArea.left = maClient.clippedArea(popupW, popupH, (maTour.marker.rectLeft.w - popupOffsetX), maTour.marker.rectLeft.h);if (clippedArea.left < clippedArea.least) { clippedArea.least = clippedArea.left;bestSide = "left";} break;default: break;} return bestSide;};maClient.popupAfterDelay = function() { var delay = 0;if (maTour.popup.delayType == 2 && maTour.popup.delay !== 0) { delay = maTour.popup.delay;} return delay;};function maPopupMouseOut(event) { var related = typeof event.relatedTarget != 'undefined' ? event.relatedTarget : event.toElement;var elementHasNoId = maClient.elementHasNoId(related);while (related && maClient.elementHasNoId(related)) { related = related.parentNode;elementHasNoId = maClient.elementHasNoId(related);} if (!related || elementHasNoId || !maClient.stringStartsWith(related.id, "maArrow,maTextArea,maHotspotTitle,maHotspotText,maHotspotImage,maHotspotMediaArea,maPopup,maPopupControlPanel,maPopupPin,maPopupPinMsg,VideoPlayback")) { if (maClient.popupIsPinned) { maClient.mouseIsOverPopup = false;maClient.setFlashPopupState();return;} maClient.mouseIsOverPopup = false;maClient.setFlashPopupState();maClient.hidePopup(maClient.popupAfterDelay());} else { } } function maPopupMouseOver(event) { if (maClient.mouseIsOverPopup || maClient.isTouchDevice) { return;} maClient.mouseIsOverPopup = true;maClient.setFlashPopupState();if (maClient.popupIsPinned) { return;} if (maTour.popup.allowMouseover) { maClient.clearAfterDelay();} else { maClient.hidePopup(0);} } function maPopupClickPin(event) { if (maClient.popupIsPinned) { maClosePopupX();} else { maClient.pinPopup();} } maClient.stringStartsWith = function(s, list) { var item = list.split(",");for (var i = 0; i < item.length; i++) { if (s.indexOf(item[i]) === 0) return true;} return false;};maClient.positionPopupLeftOrRight = function(side, popupOffsetX, arrowSize) { var arrow = side == "right" ? "left" : "right";var arrow1 = arrow + "1";var arrow2 = arrow + "2";var arrowType = arrow1;var border = parseInt(maTour.popup.borderWidth, 10);var middle = Math.floor(maTour.popup.actualH / 2);var yOffset = middle + border;var borderTweak = border > 0 ? 1 : 0;var topH = side == "right" ? maTour.marker.rectRight.h : maTour.marker.rectLeft.h;if (middle < arrowSize) { yOffset = border - borderTweak;} else if (yOffset > maTour.marker.rectTop.h || maTour.popup.actualH > topH) { yOffset -= yOffset - topH + 1;if (yOffset < border - 1) yOffset = border - (border > 0 ? 1 : 0);if (yOffset > maTour.popup.actualH - arrowSize) yOffset = maTour.popup.actualH - arrowSize;} else if (yOffset > maTour.marker.rectBottom.h) { arrowType = arrow2;yOffset += yOffset - maTour.marker.rectBottom.h + 1;if (yOffset > maTour.popup.actualH) yOffset = maTour.popup.actualH + border + (border > 0 ? 1 : 0);} var popupX;var popupY;var arrowX;var arrowY;popupY = maTour.marker.absY - yOffset;if (side == "right") { popupX = maTour.marker.absX + popupOffsetX;arrowX = popupX - arrowSize + border;if (popupY < maTour.marker.rectRight.y) popupY = maTour.marker.rectRight.y;} else { popupX = maTour.marker.absX - (maTour.popup.actualW + (border * 2) + popupOffsetX);arrowX = popupX + maTour.popup.actualW + border;if (popupY < maTour.marker.rectLeft.y) popupY = maTour.marker.rectLeft.y;} var minPopupY = maClient.popupControlPanelH;if (maClient.useTouchCss) { minPopupY += maClient.popupControlCloseButtonH / 2;} if (popupY < minPopupY && (maClient.dirEntryClicked || maTour.popup.pinOnClick || maClient.isTouchDevice)) { popupY = minPopupY;} arrowY = maTour.marker.absY - (arrowType == arrow1 ? 0 : arrowSize);maClient.setArrowPanel(maClient.arrowPanel, arrowType, arrowSize, arrowX, arrowY);var pt = new Object();pt.x = popupX;pt.y = popupY;return pt;};maClient.positionPopupUpOrDown = function(side, popupOffsetY, arrowSize) { var arrow = side == "bottom" ? "up" : "down";var arrow1 = arrow + "1";var arrow2 = arrow + "2";var arrowType = arrow1;            var border = parseInt(maTour.popup.borderWidth, 10);var middle = Math.floor(maTour.popup.actualW / 2);var xOffset = middle + border;var borderTweak = border > 0 ? 1 : 0;if (middle < arrowSize) { xOffset = border - borderTweak;} else if (xOffset > maTour.marker.rectLeft.w || maTour.popup.actualW > maTour.marker.rectBottom.w) { xOffset -= xOffset - maTour.marker.rectLeft.w + 1;if (xOffset < border - 1) xOffset = border - borderTweak;} else if (xOffset > maTour.marker.rectRight.w) { arrowType = arrow2;          xOffset += xOffset - maTour.marker.rectRight.w + 1;if (xOffset > maTour.popup.actualW) xOffset = maTour.popup.actualW + border + borderTweak;} var popupX;var popupY;var arrowX;var arrowY;if (side == "bottom") { popupY = maTour.marker.absY + popupOffsetY + (maTour.popup.allowMouseover ? -4 : 4);arrowY = popupY + border - arrowSize;if ((maTour.popup.pinOnClick || maClient.pinNextPopup) && !maClient.isTouchDevice) { popupY += maClient.popupControlPanelH;arrowY += 1;} } else { popupY = maTour.marker.absY - (maTour.popup.actualH + (border * 2) + popupOffsetY);if (popupY < maClient.popupControlPanelH && (maClient.dirEntryClicked || maTour.popup.pinOnClick) && maTour.popup.allowMouseover) { popupY = maClient.popupControlPanelH;} arrowY = popupY + maTour.popup.actualH + border;} popupX = maTour.marker.absX - xOffset;arrowX = maTour.marker.absX - (arrowType == arrow1 ? 0 : arrowSize);maClient.setArrowPanel(maClient.arrowPanel, arrowType, arrowSize, arrowX, arrowY);var pt = new Object();pt.x = popupX;pt.y = popupY;return pt;};maClient.setArrowPanel = function(panel, type, size, x, y) { if (maTour.popup.arrowType === 0) return;var s = panel.style;s.display = "none";s.width = size + "px";s.height = size + "px";panel.src = maClient.graphics[type].src;s.left = x + 'px';s.top = y + 'px';s.display = "block";};maClient.popupSetControlPanelState = function(show, pin) { if (pin && maTour.popup.location == maClient.popupLocationFixedAlwaysVisible) { pin = false;maClient.pinNextPopup = false;} var pinnable = pin || maClient.pinNextPopup || maTour.popup.pinOnClick || maClient.popupIsPinned;maClient.popupIsPinned = show && pin && !maClient.isTouchDevice;maClient.pinNextPopup = false || maClient.isTouchDevice;var showAndPinnable = show && pinnable && !maClient.isTouchDevice;maClient.popupControlPanel.style.width = maTour.popup.actualW + (maTour.popup.borderWidth * 2) + "px";maClient.popupControlPanel.style.display = showAndPinnable ? "block" : "none";maClient.popupPanel.className = showAndPinnable ? "maPopupPinned" : "maPopup";if (maTour.popup.pinOnClick) { if (showAndPinnable) { var pinUp = maTour.popup.allowMouseover || !maTour.popup.pinOnClick ? "pinUp" : "pinAnimated";maClient.popupControlPanelPin.src = maClient.graphics[pin ? "pinDown" : pinUp].src;} maClient.popupControlPanelPin.style.display = showAndPinnable ? "block" : "none";maClient.popupControlPanelPinMsg.style.display = show && pinnable && !pin && !maTour.popup.allowMouseover && maTour.popup.pinOnClick ? "block" : "none";} maClient.popupControlPanelCloseX.style.display = show && pinnable && pin ? "block" : "none";maClient.setFlashPopupState();};maClient.setFlashPopupState = function() { if (!maClient.mapLoaded) return;maClient.map.setPopupState(maTour.marker.viewId, maClient.showingPopup, maClient.popupIsPinned, maClient.mouseIsOverPopup);};maClient.setPopupLocation = function(mouseIsOverMarker) { var x;var y;var l;var s;if (maTour.usesDynamicPopup) { l = maClient.getPopupLocation(mouseIsOverMarker);x = l.x;y = l.y;s = maClient.popupPanel.style;s.top = y + 'px';s.left = x + 'px';} else if (maTour.usesFixedPopup) { l = maClient.tagLocation(null, "maPopup");x = l.x;y = l.y;} if (maTour.usesPopup) { var bw = maTour.popup.borderWidth;var top = maClient.popupControlPanelH - bw - 1;s = maClient.popupControlPanel.style;s.top = (y - top) + 'px';s.left = x + 'px';s = maClient.popupControlPanelCloseX.style;if (maClient.useTouchCss) { var buttonOffset = maClient.popupControlCloseButtonH / 2;s.top = (y - top - buttonOffset + maClient.popupControlPanelH) + 'px';s.left = (x + maTour.popup.actualW - buttonOffset + bw) + 'px';} else { s.top = (y - top + 2) + 'px';s.left = (x + maTour.popup.actualW - 14 + bw) + 'px';} if (maTour.popup.pinOnClick) { s = maClient.popupControlPanelPin.style;s.top = (y - top) + 'px';s.left = (x + bw) + 'px';s = maClient.popupControlPanelPinMsg.style;s.top = (y - top + 2) + 'px';s.left = (x + bw + 16) + 'px';} } };maClient.setPopupSize = function() { var marginsV = parseInt(maTour.layoutMarginLeft,10) + parseInt(maTour.layoutMarginRight,10);var marginsH = parseInt(maTour.layoutMarginTop,10) + parseInt(maTour.layoutMarginBottom,10);var contentHeight;var popupWidth;var textAreaHeight;var textHeight;var textWidth;var isTextOnly;if (maClient.hasMedia) maClient.mediaArea.style.display = maClient.slide.mediaW ? "block" : "none";switch (maTour.layout) { case "HII": maClient.setActualPopupWidth(maClient.slide.mediaW + marginsV);maClient.setActualPopupHeight(maClient.slide.mediaH + marginsH);maClient.mediaArea.style.width = maClient.slide.mediaW + "px";maClient.mediaArea.style.height = maClient.slide.mediaH + "px";break;case "HTT": case "HIITT": case "HTTII": var nonTextHeight;isTextOnly = maTour.layout == "HTT" || maClient.slide.mediaW === 0;popupWidth = isTextOnly ? maClient.popupTextOnlyW() : maClient.slide.mediaW + marginsV;maClient.setActualPopupWidth(popupWidth);textWidth = maTour.popup.actualW - marginsV;textHeight = maClient.getTextHeight(textWidth);var spacingH = maClient.slide.mediaH > 0 && textHeight > 0 ? maTour.layoutSpacingH : 0;var marginH = spacingH + "px";if (maTour.layout == "HTTII") { if (maClient.slide.mediaH > 0) { maClient.mediaArea.style.marginTop = marginH;} } else if (maTour.layout == "HIITT") { if (maClient.slide.mediaH > 0) { maClient.mediaArea.style.marginBottom = marginH;} maClient.textArea.style.marginTop = (maClient.slide.mediaH > 0 ? 0 : maTour.layoutMarginTop) + "px";} nonTextHeight = maClient.slide.mediaH + spacingH;contentHeight =	nonTextHeight + textHeight + marginsH;textAreaHeight = Math.max(0,  maClient.popupMaxH() - nonTextHeight - marginsH);break;case "VIITT": case "VTTII": isTextOnly = maClient.slide.mediaW === 0;popupWidth = isTextOnly ? maClient.popupTextOnlyW() : maClient.popupMaxW() - maClient.slide.mediaDeltaW;maClient.setActualPopupWidth(popupWidth);if (maTour.layout == "VIITT") { var marginL = maClient.slide.mediaW > 0 ? 0 : maTour.layoutMarginLeft;maClient.textArea.style.marginLeft = marginL + "px";} var spacingV = maClient.slide.mediaW > 0 ? parseInt(maTour.layoutSpacingV,10) : 0;textWidth = maTour.popup.actualW - maClient.slide.mediaW - spacingV - marginsV;textHeight = maClient.getTextHeight(textWidth);contentHeight = Math.max(maClient.slide.mediaH, textHeight) + marginsH;textAreaHeight = Math.min(maTour.textAreaH, maClient.popupMaxH() - marginsH);break;default: break;} if (maTour.layout != "HII") { var extraHeight = maClient.popupMaxH() - contentHeight;if (extraHeight >= 0) { maClient.setActualPopupHeight(Math.max(maClient.popupMaxH() - extraHeight, maClient.popupMinH()));maClient.textArea.style.height = textHeight + "px";maClient.textArea.style.overflow = "hidden";} else { maClient.setActualPopupHeight(maClient.popupMaxH());maClient.textArea.style.height = textAreaHeight + "px";maClient.textArea.style.overflow = maTour.popup.allowMouseover || maTour.popup.pinOnClick ? "auto" : "hidden";} if (maClient.hasMedia) { maClient.mediaArea.style.width = maClient.slide.mediaW + "px";maClient.mediaArea.style.height = maClient.slide.mediaH + "px";} if (maClient.popupControlPanelPinMsg && maTour.popup.actualW > 32) { maClient.popupControlPanelPinMsg.style.width = (maTour.popup.actualW - 32) + "px";} } };maClient.showPopup = function(show) { if (show) { maClient.popupStartRefresh();} else { if (maClient.clickedCloseX) { maClient.clickedCloseX = false;} maClient.popupStopRefresh();var dropdownList = document.getElementById('maHotspotDropdown');if (dropdownList) dropdownList.selectedIndex = 0;var slideTitlesInMenu = document.getElementById('maHotspotNamesInMenu');if (slideTitlesInMenu) { var oldSelectedViewId = document.getElementById("ma" + maTour.selectedViewId);if (oldSelectedViewId) oldSelectedViewId.className = '';maTour.selectedViewId = '';} maClient.mouseIsOverPopup = false;maClient.hideTooltip();} var visibility = show ? "visible" : "hidden";maClient.popupPanel.style.visibility = visibility;if (maTour.popup.arrowType !== 0) maClient.arrowPanel.style.visibility = visibility;if (maClient.mediaArea) { maClient.mediaArea.style.visibility = visibility;if (!show) { maClient.mediaArea.innerHTML = "";} } if (maClient.slideText && !show) { maClient.slideText.innerHTML = "";} var pin = maClient.pinNextPopup || maClient.popupIsPinned;maClient.showingPopup = show;maClient.popupSetControlPanelState(show, pin);};maClient.popupStartRefresh = function() { if (maClient.enableRefresh) { maClient.refreshCycle = maClient.macintosh ? 60 : 5;maClient.popupStopRefresh();maClient.refreshIntervalId = setInterval(maClient.popupRefresh, maClient.macintosh ? 50 : 200);} };maClient.popupStopRefresh = function() { if (typeof maClient.refreshIntervalId != "undefined") clearInterval(maClient.refreshIntervalId);};maClient.popupRefresh = function() { maClient.refreshCycle--;maClient.popupPanel.style.backgroundColor = maClient.refreshCycle % 2 === 0 ? maTour.popup.backgroundColor : maTour.popup.backgroundColorAlt;if (maClient.macintosh && maTour.popup.arrowType !== 0) maClient.arrowPanel.style.color = maClient.refreshCycle % 2 === 0 ? maTour.popup.backgroundColor : maTour.popup.backgroundColorAlt;if (maClient.macFirefox && maClient.popupIsPinned) maClient.popupControlPanel.style.backgroundColor = maClient.refreshCycle % 2 === 0 ? maTour.popup.borderColor : maTour.popup.borderColorAlt;if (maClient.refreshCycle === 0) { maClient.popupStopRefresh();if (maClient.macintosh) maClient.refreshIntervalId = setInterval(maClient.popupRefresh, 500);} };function maDirClose(event) { if (!maClient.okToCloseDirectoryPanel) { maClient.okToCloseDirectoryPanel = true;return;} var related = typeof event.relatedTarget != 'undefined' ? event.relatedTarget : event.toElement;var elementHasNoId = maClient.elementHasNoId(related);while (related && maClient.elementHasNoId(related)) { related = related.parentNode;elementHasNoId = maClient.elementHasNoId(related);} if (!related || elementHasNoId || related.id.indexOf("maDir") !== 0) { maClient.dirShow(false);} } maClient.dirCreateEntry = function(parentLevel, slide, isDataSheet, depth) { var div = document.createElement("div");div.id = "maDirEntry" + slide.viewId + "_" + parentLevel.id;if (isDataSheet) div.className = depth === 0 ? "maDirLevel1" : "maDirLevel2";else div.className = maClient.useTouchCss ? "maDirEntryTouch" : "maDirEntry";if ((maTour.dir.showImagePreview || maTour.dir.showTextPreview) && !maClient.isTouchDevice) { div.onmouseover = new Function("maClient.dirShowPreview(" + slide.viewId + ");");div.onmouseout = new Function("maClient.dirHidePreview();");} var title = document.createElement("a");title.href = "javascript:maClient.dirShowEntry(" + slide.viewId + ");";title.innerHTML = slide.title;div.appendChild(title);if (maClient.macFirefox) { div.style.width = maTour.dir.contentWidth - 40 + "px";} parentLevel.contentDiv.appendChild(div);var entry = new maDirEntry(parentLevel, div, slide);parentLevel.content.push(entry);};maClient.dirCreateLevel = function(parentLevel, titleId, depth, levelId, collapseState) { var outerDiv = document.createElement("div");outerDiv.id = "maDirLevel" + levelId;outerDiv.className = (maClient.useTouchCss ? "maDirLevelTouch" : "maDirLevel") + depth;var title = document.createElement("a");title.href = "javascript:maClient.dirToggleLevelExpansion(" + levelId + "," + depth + ");";title.innerHTML = maClient.lookupString(titleId);outerDiv.appendChild(title);var countSpan = document.createElement("span");countSpan.id = "maDirLevelCount" + levelId;countSpan.className = maClient.useTouchCss ? "maDirLevelCountTouch" : "maDirLevelCount";outerDiv.appendChild(countSpan);var contentDiv = document.createElement("div");contentDiv.id = "maDirLevel" + levelId + "Content";contentDiv.className = "maDirLevelContent";var collapse;if (depth == 1 && maTour.dir.openExpanded && collapseState.length === 0) { collapse = false;} else { collapse = depth == 1;if (collapseState.length > 0) { for (var i = 1; i < collapseState.length; i++) { if (collapseState[i] == levelId) { collapse = !collapse;break;} } } } contentDiv.style.display = collapse ? "none" : "block";outerDiv.appendChild(contentDiv);parentLevel.contentDiv.appendChild(outerDiv);var level = new maDirLevel(parentLevel, levelId, depth, outerDiv, contentDiv, countSpan);parentLevel.content.push(level);return level;};maClient.dirCreateOrderAlpha = function() { maClient.dirBodyAlphabetic = new maDirLevel(null, 0, 0, null, document.createElement("div"), null);var hotspots = new Array();	 for (var viewId in maClient.slides) { var slide = maClient.getSlide(viewId);if (slide.title.length >= 1 && slide.title.substr(0, 1) != "_") { hotspots.push(slide);} } hotspots.sort(maClient.sortHotspotsByTitle);for (var hotspot in hotspots) { maClient.dirCreateEntry(maClient.dirBodyAlphabetic, hotspots[hotspot], false, 0);} };maClient.sortHotspotsByTitle = function(a, b) { var titleA = a.title.toLowerCase();var titleB = b.title.toLowerCase();if (titleA < titleB) return -1;if (titleA > titleB) return 1;return 0;};maClient.dirCreateOrderGroup = function(collapseState) { maClient.dirBodyLevels = new maDirLevel(null, 0, 0, null, document.createElement("div"), null);var entryDepth = maTour.dir.table[0];var levelId = 0;var parentLevel = new Array();parentLevel[0] = maClient.dirBodyLevels;var i = 1;while (i < maTour.dir.table.length) { var depth = maTour.dir.table[i];var isDataSheet = depth < 0;if (depth == entryDepth || isDataSheet) { var viewId = maTour.dir.table[i + 1];var slide = maClient.getSlide(viewId);if (slide.title.length >= 1 && slide.title.substr(0, 1) != "_") { if (isDataSheet)  depth *= -1;depth = depth - 1;maClient.dirCreateEntry(parentLevel[depth], slide, isDataSheet, depth);} } else { levelId++;var titleId = maTour.dir.table[i + 1];parentLevel[depth] = maClient.dirCreateLevel(parentLevel[depth - 1], titleId, depth, levelId, collapseState);} i += 2;} };maClient.dirCreateTitleBar = function() { if (maTour.dir.titleBarWidth > 0) { var padding = 6;maClient.dirPanel.style.width = maTour.dir.titleBarWidth - padding + "px";} var bar = document.getElementById("maDirTitleBar");var title = document.createElement("td");title.className = maClient.useTouchCss ? "maDirTitleTouch" : "maDirTitle";title.innerHTML = maTour.dir.textTitle;bar.appendChild(title);if (maTour.dir.showGroupSort) { var sortTd = document.createElement("td");var sortImg = document.createElement("img");sortTd.appendChild(sortImg);sortTd.style.paddingLeft = "4px";sortTd.style.textAlign = "right";sortImg.style.width = "16px";sortImg.style.height = "17px";sortImg.title = maTour.dir.textAlphaSortTooltip;sortImg.id = "maDirToggle";sortImg.src = maClient.dirMode == 2 ? maClient.graphics["sortAlpha"].src : maClient.graphics["sortGroup"].src;sortTd.onclick = new Function("maClient.dirToggleOrder();");bar.appendChild(sortTd);} if (maTour.dir.showSearch) { var search = document.createElement("td");search.className = maClient.useTouchCss ? "maDirSearchLabelTouch" : "maDirSearchLabel";search.innerHTML = maTour.dir.textSearchLabel;bar.appendChild(search);var searchBoxTd = document.createElement("td");var searchBox = document.createElement("input");searchBoxTd.appendChild(searchBox);searchBox.className = maClient.useTouchCss ? "maDirSearchBoxTouch" : "maDirSearchBox";searchBox.type = "text";bar.appendChild(searchBoxTd);maClient.dirSearchBox = searchBox;} };function maDirEntry(parentLevel, div, slide) { this.div = div;this.parentLevel = parentLevel;this.slide = slide;} maClient.dirValidLocation = function(locationId, titleElement, topMenuElement) { if (locationId == 4) { if (titleElement) return 4;else locationId = 5;} if (locationId == 5) { if (topMenuElement) return 5;else if (titleElement) return 4;} if (locationId != 1) locationId = document.getElementById("maMap") ? 3 : 1;return locationId;};maClient.dirSetLocation = function() { var x = 0;var y = 0;var containerElement;var containerLocation;var locationId = maTour.dir.location;var mapElement = document.getElementById("maMap");var titleElement = document.getElementById("maPageTitle");var topMenuElement = document.getElementById("maTopMenu");if (locationId == 2 || locationId == 3) { if (!mapElement) locationId = maClient.dirValidLocation(4, titleElement, topMenuElement);} else { locationId = maClient.dirValidLocation(locationId, titleElement, topMenuElement);} switch (locationId) { case 1: { break;} case 2: case 3: { containerLocation = maClient.tagLocation("maTour", "maMap");y = containerLocation.y;x = containerLocation.x;if (locationId == 3) x += maTour.stageW - maClient.dirPanel.offsetWidth;break;} case 4: case 5: { containerElement = locationId == 4 ? titleElement : topMenuElement;if (containerElement) { containerLocation = maClient.tagLocation("maTour", containerElement.id);var topOffset = locationId == 4 ? 3 : 2;y = containerLocation.y + topOffset;x = containerLocation.x + containerElement.offsetWidth - maClient.dirPanel.offsetWidth - 4;} break;} default: break;	 } x += maTour.dir.locationX;y += maTour.dir.locationY;maClient.dirPanel.style.left = x + 'px';maClient.dirPanel.style.top = y + 'px';   var bodyPanelStyle = maClient.dirBodyPanel.style;var bodyPanelDelta = 0;if (maTour.dir.alignContentRight) bodyPanelDelta = maClient.dirPanel.offsetWidth - maTour.dir.contentWidth - 2;bodyPanelStyle.left = (x + bodyPanelDelta) + 'px';bodyPanelStyle.top = (y + maClient.dirPanel.offsetHeight - 1) + 'px';maClient.dirPanel.style.visibility = "visible";};maClient.dirInit = function() { if (!maTour.hasDirectory) return;var collapseState = new Array();var cs = maGetQueryStringArg("cs");if (cs.length === 0) { maClient.dirMode = maTour.dir.showGroupSort ? 2 : 1;} else { collapseState = cs.split(",");maClient.dirMode = collapseState[0];} maClient.dirPanel = document.getElementById("maDir");maClient.dirBodyPanel = document.getElementById("maDirBody");maClient.dirContentPanel = document.getElementById("maDirContent");maClient.dirStatusPanel = document.getElementById("maDirStatusLine");maClient.dirPanel.className = maClient.useTouchCss ? "maDirTouch" : "maDir";maClient.dirStatusPanel.className = maClient.useTouchCss ? "maDirStatusLineTouch" : "maDirStatusLine";maClient.dirContentPanel.className = maClient.useTouchCss ? "maDirContentTouch" : "maDirContent";maClient.dirBodyPanel.className = maClient.useTouchCss ? "maDirBodyTouch" : "maDirBody";if (maTour.dir.showImagePreview || maTour.dir.showTextPreview) { var previewDiv = document.createElement("div");previewDiv.className = "maDirPreview";document.body.appendChild(previewDiv);maClient.dirPreviewPanel = previewDiv;} maClient.dirCreateTitleBar();maClient.dirCreateOrderAlpha();if (maTour.dir.showGroupSort) maClient.dirCreateOrderGroup(collapseState);var find = maGetQueryStringArg("find");if (find.length !== 0) maClient.dirSearchBox.value = find;maClient.dirSearch();maClient.dirSetLocation();maAttachEventListener(maClient.dirPanel, "mouseout", maDirClose);maAttachEventListener(maClient.dirBodyPanel, "mouseout", maDirClose);if (maTour.dir.showSearch) maAttachEventListener(maClient.dirSearchBox, "keyup", maDirSearchChanged);if (maClient.macFirefox || maClient.safariLt3) { maClient.dirStartRefresh();if (maClient.macFirefox) { maTour.dir.backgroundColorAlt = maClient.deriveAltColor(maTour.dir.backgroundColor);maTour.dir.titleBarColorAlt = maClient.deriveAltColor(maTour.dir.titleBarColor);} } maClient.dirShowing = false;maClient.showingPreview = false;maClient.levelState = null;};function maDirLevel(parentLevel, id, depth, outerDiv, contentDiv, countSpan) { this.id = id;this.depth = depth;this.parentLevel = parentLevel;this.outerDiv = outerDiv;this.contentDiv = contentDiv;this.countSpan = countSpan;this.content = new Array();this.resultCount = 0;} maClient.dirBodyMouseOver = function() { maClient.dirMouseIsOver = true;};maClient.dirMouseOver = function() { maClient.dirMouseIsOver = true;maClient.dirShow(true);};maClient.dirSearchText = function() { if (maTour.dir.showSearch) return maClient.dirSearchBox.value;else return "";};maClient.dirSearch = function() { if (maTour.dir.showImagePreview || maTour.dir.showTextPreview) maClient.dirHidePreview();var pattern = maClient.dirSearchText().toLowerCase();var clear = pattern.length <= 1;var patternLength = pattern.length;var resultCount = 0;for (var viewId in maClient.slides) { var slide = maClient.getSlide(viewId);slide.searchStart = "";slide.searchLength = 0;if (clear) { slide.inSearchResults = true;resultCount++;continue;} slide.inSearchResults = false;slide.searchLength = patternLength;var index = 0;var offset = 0;if (slide.title.toLowerCase().indexOf(pattern) >= 0) { slide.inSearchResults = true;resultCount++;} if (slide.plainText.length === 0) continue;var searchText = slide.plainText.toLowerCase();while (offset != -1) { var text = searchText.substr(index);offset = text.indexOf(pattern);if (offset >= 0) { slide.inSearchResults = true;if (slide.searchStart.length > 0) slide.searchStart += ",";slide.searchStart += index + offset;index += offset + patternLength;if (index >= searchText.length) offset = -1;resultCount++;} } } if (maTour.dir.showGroupSort) maClient.dirShowSearchResults(maClient.dirBodyLevels, clear);maClient.dirShowSearchResults(maClient.dirBodyAlphabetic, false);maClient.dirSetStatusMessage(maClient.dirSearchText());};function maDirSearchChanged(event) { if (maClient.safariLt3) { alert("Search requires Safari 3 or greater");return;} maClient.dirSearchChanged();} maClient.dirSearchChanged = function() { if (!maClient.dirShowing) maClient.dirShow(true);maClient.dirSearch();};maClient.dirSearchClear = function() { maClient.dirSearchBox.value = "";maClient.dirSearch();};maClient.dirSetStatusMessage = function() { var msg;var resultCount;var searchString = maTour.dir.showSearch ? maClient.dirSearchText() : "";if (maClient.dirMode == 1) resultCount = maClient.dirBodyAlphabetic.resultCount;else resultCount = maClient.dirBodyLevels.resultCount;if (searchString.length >= 2) { var className = maClient.useTouchCss ? "maDirEntrySearchResultTouch" : "maDirEntrySearchResult";msg = maTour.dir.textSearchResultsMessage + " <span class='" + className + "'>" + searchString + "</span> : <b>" + resultCount + "</b>";msg += "<b><a style='margin-left:16px;' href='javascript:maClient.dirSearchClear();' title='Erase the Search box'>" + maTour.dir.textClearButtonLabel + "</a></b>";} else { msg = maTour.dir.textNoSearchMessage + " : " + resultCount;} maClient.dirStatusPanel.innerHTML = msg;};maClient.dirShowSearchResults = function(level, clear) { var resultCount = 0;for (var index = 0; index < level.content.length; index++) { var o = level.content[index];if (o instanceof maDirEntry) { var inSearchResults = o.slide.inSearchResults;o.div.style.display = inSearchResults ? "block" : "none";if (inSearchResults) resultCount++;} else { resultCount += maClient.dirShowSearchResults(o, clear);} } if (level.outerDiv !== null) { if (level.depth == 1) level.countSpan.innerHTML = "&nbsp;(" + resultCount + ")";level.outerDiv.style.display = resultCount > 0 ? "block" : "none";var div = maClient.dirLevelContentDiv(level.id);if (div) div.style.display = clear && level.depth == 1 ? 'none' : 'block';} level.resultCount = resultCount;return resultCount;};maClient.dirAdjustHeight = function(count) { if (!maClient.ie6) return;var contentHeight = maClient.dirContentPanel.firstChild.offsetHeight;if (contentHeight === 0) { if (typeof count == 'undefined') count = 1;else if (count >= 10) return;count++;setTimeout("maClient.dirAdjustHeight(" + count + ");", 1);} else { var h;if (contentHeight > maTour.dir.maxHeight) h = maTour.dir.maxHeight;else h = contentHeight;maClient.dirContentPanel.style.height = h + "px";} };maClient.closeDirIfMouseIsNotOverIt = function() { var dirIsShowing = maClient.dirBodyPanel.style.display == "block";var closeDir = dirIsShowing && !maClient.mouseIsOverDir;if (closeDir) { maClient.dirShow(false);} };maClient.mouseIsOverDir = function() { var tourLocation = maClient.tagLocation(null, "maTour");var x = maClient.mouseX - tourLocation.x;var y = maClient.mouseY - tourLocation.y;var e = maClient.dirPanel;var mouseIsOverDirHeader =  x >= e.offsetLeft && x <= e.offsetLeft + e.offsetWidth && y >= e.offsetTop && y <= e.offsetTop + e.offsetHeight;e = maClient.dirBodyPanel;var mouseIsOverDirBody =  x >= e.offsetLeft && x <= e.offsetLeft + e.offsetWidth && y >= e.offsetTop && y <= e.offsetTop + e.offsetHeight;return mouseIsOverDirHeader || mouseIsOverDirBody;};maClient.dirShow = function(show) { if (!maClient.mapLoaded) { return;} if (show) { if (!maTour.dir.staysOpen) { maClosePopup();} var dirBodyContent = maClient.dirContentPanel.firstChild;if (dirBodyContent) maClient.dirContentPanel.removeChild(dirBodyContent);if (maClient.dirMode == 1) { maClient.dirContentPanel.appendChild(maClient.dirBodyAlphabetic.contentDiv);} else { maClient.dirContentPanel.appendChild(maClient.dirBodyLevels.contentDiv);} maClient.dirAdjustHeight();		 maClient.dirSetStatusMessage();clearInterval(maClient.dirCloseDirIntervalId);maClient.dirCloseDirIntervalId = setTimeout("maClient.closeDirIfMouseIsNotOverIt();", 2000);} else { maClient.dirMouseIsOver = false;} maClient.dirBodyPanel.style.display = show || maTour.dir.staysOpen ? "block" : "none";maClient.dirShowing = show || maTour.dir.staysOpen;if (maClient.map) { maClient.map.setDirectoryState(show && !maTour.dir.staysOpen);} };maClient.updateLevelState = function() { maClient.levelState = maClient.dirMode.toString();maClient.dirSaveCollapseState(maClient.dirBodyLevels);};maClient.dirShowEntry = function(viewId) { maClient.dirHidePreview();var pageNumber = maClient.getPageBySlideViewId(viewId).pageNumber;if (pageNumber != maTour.pageNumber) { maClient.updateLevelState();maClient.goToPage('page' + pageNumber + '.htm', viewId, maClient.levelState);} else { if (typeof maOnDirectoryEntryClick != "undefined") { var slide = maClient.getSlide(viewId);maOnDirectoryEntryClick(slide.slideId);} maClient.showSlide(viewId, true);} };maClient.dirMovePreviewPanel = function() { var border = 2;var offset;if (maTour.dir.previewOnRight) { offset = 16;} else { offset = maClient.showingPreviewImageOnly ? maTour.dir.previewImageWidth + border : maTour.dir.previewWidth;offset = -(offset + 32);} maClient.dirPreviewPanel.style.left = maClient.mouseX + offset + "px";maClient.dirPreviewPanel.style.top = maClient.mouseY - 8 + "px";};maClient.dirHidePreview = function() { var previewDiv = maClient.dirPreviewPanel;if (!previewDiv) return;clearInterval(maClient.dirPreviewIntervalId);maClient.dirShowPreviewPanel(false);maClient.dirPreviewSlide = null;maClient.showingPreview = false;};maClient.highlightSearchText = function(slide) { var searchText = slide.dirPreviewText;if (searchText.length === 0) searchText = slide.plainText;var searchStart = slide.searchStart.split(',');var lastStart = 0;var html = "";if (slide.searchLength >= 2 && slide.searchStart.length > 0) { for (var index = 0; index < searchStart.length; index++) { var start = parseInt(searchStart[index], 10);var found = searchText.substr(start, slide.searchLength);if (found.length > 0) { var className = maClient.useTouchCss ? "maDirEntrySearchResultTouch" : "maDirEntrySearchResult";html +=  searchText.substring(lastStart, start) +  "<span class='" + className + "'>" + found + "</span>";} lastStart = start + slide.searchLength;} } html += searchText.substring(lastStart);return html;};maClient.dirShowPreview = function(viewId) { var previewDiv = maClient.dirPreviewPanel;if (!previewDiv) return;var slide = maClient.getSlide(viewId);maClient.dirPreviewSlide = slide;if (typeof maOnDirectoryEntryMouseover != "undefined") maOnDirectoryEntryMouseover(slide.slideId);if (slide.usesLiveData && slide.liveDataUpdateTime === 0) { clearInterval(maClient.dirPreviewIntervalId);maClient.dirPreviewIntervalId = setTimeout("maClient.dirShowPreview(" + viewId + ");", 250);if (!slide.liveDataRequestPending) { slide.liveDataRequestPending = true;maClient.getLiveData(slide);} return;} var html = maClient.highlightSearchText(slide);var noText = html.length === 0 || !maTour.dir.showTextPreview;var innerHtml = "";var suppressPreview = slide.dirPreviewImageUrl == "0";var noImage = slide.mediaW === 0 || slide.imageSrc === null || suppressPreview;if (noImage && !suppressPreview && slide.dirPreviewImageUrl.length) { noImage = false;} if (maTour.dir.showImagePreview && !noImage) { var w;if (slide.dirPreviewImageUrl.length) w = maTour.dir.previewImageWidth;else w = slide.mediaW < maTour.dir.previewImageWidth ? slide.mediaW : maTour.dir.previewImageWidth;var margin = noText ? "" : "margin-left:4px;";var width = "width:" + w + "px;";var imaSrc = slide.dirPreviewImageUrl.length ? slide.dirPreviewImageUrl : maClient.slideImageSrc(slide);var imgTag = "<img src='" + imaSrc + "' style='" + width + margin + "' class='maDirPreviewImage'/>";innerHtml += imgTag;} maClient.showingPreviewImageOnly = false;if (noText) { if (maTour.dir.showImagePreview && !noImage) maClient.showingPreviewImageOnly = true;} else { innerHtml += html;} if (innerHtml.length === 0) { previewDiv.style.visibility = "hidden";} else { maClient.dirMovePreviewPanel();previewDiv.style.padding = noText ? "0px" : "4px";previewDiv.innerHTML = innerHtml;var border = 2;previewDiv.style.width = (noText ? maTour.dir.previewImageWidth + border : maTour.dir.previewWidth) + "px";maClient.dirPreviewIntervalId = setTimeout("maClient.dirShowPreviewPanel(true);", 250);} maClient.showingPreview = true;};maClient.dirShowPreviewPanel = function(show) { maClient.dirPreviewPanel.style.visibility = show ? "visible" : "hidden";};maClient.dirLevelContentDiv = function(levelId) { var divId = "maDirLevel" + levelId + "Content";return document.getElementById(divId);};maClient.dirSaveCollapseState = function(level) { if (typeof level == "undefined") return;for (var index = 0; index < level.content.length; index++) { var o = level.content[index];if (o instanceof maDirEntry) { continue;} else { var expanded = o.contentDiv.style.display == "block";var include = o.depth == 1 ? expanded : !expanded;if (include && o.resultCount) maClient.levelState += "," + o.id;maClient.dirSaveCollapseState(o);} } };maClient.dirToggleLevelExpansion = function(levelId, depth) { var div = maClient.dirLevelContentDiv(levelId);var show = div.style.display == 'none';div.style.display = show ? 'block' : 'none';if (depth > 1) return;if (maTour.dir.autoCollapse) { var levels = maClient.dirBodyLevels.content;for (var index = 0; index < levels.length; index++) { var level = levels[index];if (level.depth > 1) continue;if (typeof level.contentDiv == "undefined") continue;if (level.contentDiv.id != div.id) level.contentDiv.style.display = 'none';} } maClient.dirAdjustHeight();		 maClient.okToCloseDirectoryPanel = false;};maClient.dirToggleOrder = function() { var e = document.getElementById("maDirToggle");if (maClient.dirMode == 1) { e.title = maTour.dir.textAlphaSortTooltip;e.src = maClient.graphics["sortAlpha"].src;maClient.dirMode = 2;} else { e.title = maTour.dir.textGroupSortTooltip;e.src = maClient.graphics["sortGroup"].src;maClient.dirMode = 1;} maClient.dirShow(true);};maClient.dirStartRefresh = function() { if (maClient.enableRefresh) { maClient.refreshDirCycle = maClient.macintosh ? 60 : 5;maClient.dirStopRefresh();maClient.refreshDirIntervalId = setInterval(maClient.refreshDir, 50);} };maClient.dirStopRefresh = function() { if (typeof maClient.refreshDirIntervalId != "undefined") clearInterval(maClient.refreshDirIntervalId);};maClient.refreshDir = function() { maClient.refreshDirCycle--;if (maClient.dirShowing) maClient.dirBodyPanel.style.backgroundColor = maClient.refreshDirCycle % 2 === 0 ? maTour.dir.backgroundColor : maTour.dir.backgroundColorAlt;maClient.dirPanel.style.backgroundColor = maClient.refreshDirCycle % 2 === 0 ? maTour.dir.titleBarColor : maTour.dir.titleBarColorAlt;if (maClient.refreshDirCycle === 0) { maClient.refreshDirIntervalId = setInterval(maClient.refreshDir, maClient.macFirefox ? 50 : 100);} };